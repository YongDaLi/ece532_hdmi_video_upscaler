// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dma_master_driver.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dma_master_driver::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dma_master_driver::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<27> dma_master_driver::ap_ST_fsm_state1 = "1";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state2 = "10";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state3 = "100";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state4 = "1000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state5 = "10000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state6 = "100000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state7 = "1000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state8 = "10000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state9 = "100000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state10 = "1000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state11 = "10000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state12 = "100000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<27> dma_master_driver::ap_ST_fsm_state27 = "100000000000000000000000000";
const int dma_master_driver::C_M_AXI_DMA0_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int dma_master_driver::C_M_AXI_DMA0_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dma_master_driver::C_M_AXI_DMA0_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dma_master_driver::C_M_AXI_DMA0_CACHE_VALUE = "11";
const int dma_master_driver::C_M_AXI_DATA_WIDTH = "100000";
const int dma_master_driver::C_M_AXI_DMA1_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int dma_master_driver::C_M_AXI_DMA1_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dma_master_driver::C_M_AXI_DMA1_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dma_master_driver::C_M_AXI_DMA1_CACHE_VALUE = "11";
const sc_lv<32> dma_master_driver::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dma_master_driver::ap_const_lv32_2 = "10";
const sc_lv<1> dma_master_driver::ap_const_lv1_0 = "0";
const sc_lv<32> dma_master_driver::ap_const_lv32_17 = "10111";
const sc_lv<10> dma_master_driver::ap_const_lv10_0 = "0000000000";
const sc_lv<32> dma_master_driver::ap_const_lv32_1 = "1";
const sc_lv<32> dma_master_driver::ap_const_lv32_1A = "11010";
const sc_lv<32> dma_master_driver::ap_const_lv32_18 = "11000";
const sc_lv<32> dma_master_driver::ap_const_lv32_19 = "11001";
const sc_lv<10> dma_master_driver::ap_const_lv10_384 = "1110000100";
const sc_lv<10> dma_master_driver::ap_const_lv10_1 = "1";
const sc_lv<8> dma_master_driver::ap_const_lv8_0 = "00000000";
const sc_lv<32> dma_master_driver::ap_const_lv32_1D = "11101";
const sc_lv<32> dma_master_driver::ap_const_lv32_24 = "100100";
const sc_lv<18> dma_master_driver::ap_const_lv18_500 = "10100000000";
const sc_lv<2> dma_master_driver::ap_const_lv2_0 = "00";
const sc_lv<38> dma_master_driver::ap_const_lv38_66667 = "1100110011001100111";
const sc_lv<1> dma_master_driver::ap_const_lv1_1 = "1";
const sc_lv<3> dma_master_driver::ap_const_lv3_0 = "000";
const sc_lv<4> dma_master_driver::ap_const_lv4_0 = "0000";
const bool dma_master_driver::ap_const_boolean_1 = true;

dma_master_driver::dma_master_driver(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dma_master_driver_dma0_m_axi_U = new dma_master_driver_dma0_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DMA0_ID_WIDTH,C_M_AXI_DMA0_ADDR_WIDTH,C_M_AXI_DMA0_DATA_WIDTH,C_M_AXI_DMA0_AWUSER_WIDTH,C_M_AXI_DMA0_ARUSER_WIDTH,C_M_AXI_DMA0_WUSER_WIDTH,C_M_AXI_DMA0_RUSER_WIDTH,C_M_AXI_DMA0_BUSER_WIDTH,C_M_AXI_DMA0_TARGET_ADDR,C_M_AXI_DMA0_USER_VALUE,C_M_AXI_DMA0_PROT_VALUE,C_M_AXI_DMA0_CACHE_VALUE>("dma_master_driver_dma0_m_axi_U");
    dma_master_driver_dma0_m_axi_U->AWVALID(m_axi_dma0_AWVALID);
    dma_master_driver_dma0_m_axi_U->AWREADY(m_axi_dma0_AWREADY);
    dma_master_driver_dma0_m_axi_U->AWADDR(m_axi_dma0_AWADDR);
    dma_master_driver_dma0_m_axi_U->AWID(m_axi_dma0_AWID);
    dma_master_driver_dma0_m_axi_U->AWLEN(m_axi_dma0_AWLEN);
    dma_master_driver_dma0_m_axi_U->AWSIZE(m_axi_dma0_AWSIZE);
    dma_master_driver_dma0_m_axi_U->AWBURST(m_axi_dma0_AWBURST);
    dma_master_driver_dma0_m_axi_U->AWLOCK(m_axi_dma0_AWLOCK);
    dma_master_driver_dma0_m_axi_U->AWCACHE(m_axi_dma0_AWCACHE);
    dma_master_driver_dma0_m_axi_U->AWPROT(m_axi_dma0_AWPROT);
    dma_master_driver_dma0_m_axi_U->AWQOS(m_axi_dma0_AWQOS);
    dma_master_driver_dma0_m_axi_U->AWREGION(m_axi_dma0_AWREGION);
    dma_master_driver_dma0_m_axi_U->AWUSER(m_axi_dma0_AWUSER);
    dma_master_driver_dma0_m_axi_U->WVALID(m_axi_dma0_WVALID);
    dma_master_driver_dma0_m_axi_U->WREADY(m_axi_dma0_WREADY);
    dma_master_driver_dma0_m_axi_U->WDATA(m_axi_dma0_WDATA);
    dma_master_driver_dma0_m_axi_U->WSTRB(m_axi_dma0_WSTRB);
    dma_master_driver_dma0_m_axi_U->WLAST(m_axi_dma0_WLAST);
    dma_master_driver_dma0_m_axi_U->WID(m_axi_dma0_WID);
    dma_master_driver_dma0_m_axi_U->WUSER(m_axi_dma0_WUSER);
    dma_master_driver_dma0_m_axi_U->ARVALID(m_axi_dma0_ARVALID);
    dma_master_driver_dma0_m_axi_U->ARREADY(m_axi_dma0_ARREADY);
    dma_master_driver_dma0_m_axi_U->ARADDR(m_axi_dma0_ARADDR);
    dma_master_driver_dma0_m_axi_U->ARID(m_axi_dma0_ARID);
    dma_master_driver_dma0_m_axi_U->ARLEN(m_axi_dma0_ARLEN);
    dma_master_driver_dma0_m_axi_U->ARSIZE(m_axi_dma0_ARSIZE);
    dma_master_driver_dma0_m_axi_U->ARBURST(m_axi_dma0_ARBURST);
    dma_master_driver_dma0_m_axi_U->ARLOCK(m_axi_dma0_ARLOCK);
    dma_master_driver_dma0_m_axi_U->ARCACHE(m_axi_dma0_ARCACHE);
    dma_master_driver_dma0_m_axi_U->ARPROT(m_axi_dma0_ARPROT);
    dma_master_driver_dma0_m_axi_U->ARQOS(m_axi_dma0_ARQOS);
    dma_master_driver_dma0_m_axi_U->ARREGION(m_axi_dma0_ARREGION);
    dma_master_driver_dma0_m_axi_U->ARUSER(m_axi_dma0_ARUSER);
    dma_master_driver_dma0_m_axi_U->RVALID(m_axi_dma0_RVALID);
    dma_master_driver_dma0_m_axi_U->RREADY(m_axi_dma0_RREADY);
    dma_master_driver_dma0_m_axi_U->RDATA(m_axi_dma0_RDATA);
    dma_master_driver_dma0_m_axi_U->RLAST(m_axi_dma0_RLAST);
    dma_master_driver_dma0_m_axi_U->RID(m_axi_dma0_RID);
    dma_master_driver_dma0_m_axi_U->RUSER(m_axi_dma0_RUSER);
    dma_master_driver_dma0_m_axi_U->RRESP(m_axi_dma0_RRESP);
    dma_master_driver_dma0_m_axi_U->BVALID(m_axi_dma0_BVALID);
    dma_master_driver_dma0_m_axi_U->BREADY(m_axi_dma0_BREADY);
    dma_master_driver_dma0_m_axi_U->BRESP(m_axi_dma0_BRESP);
    dma_master_driver_dma0_m_axi_U->BID(m_axi_dma0_BID);
    dma_master_driver_dma0_m_axi_U->BUSER(m_axi_dma0_BUSER);
    dma_master_driver_dma0_m_axi_U->ACLK(ap_clk);
    dma_master_driver_dma0_m_axi_U->ARESET(ap_rst_n_inv);
    dma_master_driver_dma0_m_axi_U->ACLK_EN(ap_var_for_const0);
    dma_master_driver_dma0_m_axi_U->I_ARVALID(dma0_ARVALID);
    dma_master_driver_dma0_m_axi_U->I_ARREADY(dma0_ARREADY);
    dma_master_driver_dma0_m_axi_U->I_ARADDR(dma0_ARADDR);
    dma_master_driver_dma0_m_axi_U->I_ARID(dma0_ARID);
    dma_master_driver_dma0_m_axi_U->I_ARLEN(dma0_ARLEN);
    dma_master_driver_dma0_m_axi_U->I_ARSIZE(dma0_ARSIZE);
    dma_master_driver_dma0_m_axi_U->I_ARLOCK(dma0_ARLOCK);
    dma_master_driver_dma0_m_axi_U->I_ARCACHE(dma0_ARCACHE);
    dma_master_driver_dma0_m_axi_U->I_ARQOS(dma0_ARQOS);
    dma_master_driver_dma0_m_axi_U->I_ARPROT(dma0_ARPROT);
    dma_master_driver_dma0_m_axi_U->I_ARUSER(dma0_ARUSER);
    dma_master_driver_dma0_m_axi_U->I_ARBURST(dma0_ARBURST);
    dma_master_driver_dma0_m_axi_U->I_ARREGION(dma0_ARREGION);
    dma_master_driver_dma0_m_axi_U->I_RVALID(dma0_RVALID);
    dma_master_driver_dma0_m_axi_U->I_RREADY(dma0_RREADY);
    dma_master_driver_dma0_m_axi_U->I_RDATA(dma0_RDATA);
    dma_master_driver_dma0_m_axi_U->I_RID(dma0_RID);
    dma_master_driver_dma0_m_axi_U->I_RUSER(dma0_RUSER);
    dma_master_driver_dma0_m_axi_U->I_RRESP(dma0_RRESP);
    dma_master_driver_dma0_m_axi_U->I_RLAST(dma0_RLAST);
    dma_master_driver_dma0_m_axi_U->I_AWVALID(dma0_AWVALID);
    dma_master_driver_dma0_m_axi_U->I_AWREADY(dma0_AWREADY);
    dma_master_driver_dma0_m_axi_U->I_AWADDR(dma0_AWADDR);
    dma_master_driver_dma0_m_axi_U->I_AWID(dma0_AWID);
    dma_master_driver_dma0_m_axi_U->I_AWLEN(dma0_AWLEN);
    dma_master_driver_dma0_m_axi_U->I_AWSIZE(dma0_AWSIZE);
    dma_master_driver_dma0_m_axi_U->I_AWLOCK(dma0_AWLOCK);
    dma_master_driver_dma0_m_axi_U->I_AWCACHE(dma0_AWCACHE);
    dma_master_driver_dma0_m_axi_U->I_AWQOS(dma0_AWQOS);
    dma_master_driver_dma0_m_axi_U->I_AWPROT(dma0_AWPROT);
    dma_master_driver_dma0_m_axi_U->I_AWUSER(dma0_AWUSER);
    dma_master_driver_dma0_m_axi_U->I_AWBURST(dma0_AWBURST);
    dma_master_driver_dma0_m_axi_U->I_AWREGION(dma0_AWREGION);
    dma_master_driver_dma0_m_axi_U->I_WVALID(dma0_WVALID);
    dma_master_driver_dma0_m_axi_U->I_WREADY(dma0_WREADY);
    dma_master_driver_dma0_m_axi_U->I_WDATA(dma0_WDATA);
    dma_master_driver_dma0_m_axi_U->I_WID(dma0_WID);
    dma_master_driver_dma0_m_axi_U->I_WUSER(dma0_WUSER);
    dma_master_driver_dma0_m_axi_U->I_WLAST(dma0_WLAST);
    dma_master_driver_dma0_m_axi_U->I_WSTRB(dma0_WSTRB);
    dma_master_driver_dma0_m_axi_U->I_BVALID(dma0_BVALID);
    dma_master_driver_dma0_m_axi_U->I_BREADY(dma0_BREADY);
    dma_master_driver_dma0_m_axi_U->I_BRESP(dma0_BRESP);
    dma_master_driver_dma0_m_axi_U->I_BID(dma0_BID);
    dma_master_driver_dma0_m_axi_U->I_BUSER(dma0_BUSER);
    grp_transfer_chunk_1_fu_87 = new transfer_chunk_1("grp_transfer_chunk_1_fu_87");
    grp_transfer_chunk_1_fu_87->ap_clk(ap_clk);
    grp_transfer_chunk_1_fu_87->ap_rst(ap_rst_n_inv);
    grp_transfer_chunk_1_fu_87->ap_start(grp_transfer_chunk_1_fu_87_ap_start);
    grp_transfer_chunk_1_fu_87->ap_done(grp_transfer_chunk_1_fu_87_ap_done);
    grp_transfer_chunk_1_fu_87->ap_idle(grp_transfer_chunk_1_fu_87_ap_idle);
    grp_transfer_chunk_1_fu_87->ap_ready(grp_transfer_chunk_1_fu_87_ap_ready);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWVALID(grp_transfer_chunk_1_fu_87_m_axi_dma_AWVALID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWREADY(dma0_AWREADY);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWADDR(grp_transfer_chunk_1_fu_87_m_axi_dma_AWADDR);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWID(grp_transfer_chunk_1_fu_87_m_axi_dma_AWID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWLEN(grp_transfer_chunk_1_fu_87_m_axi_dma_AWLEN);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWSIZE(grp_transfer_chunk_1_fu_87_m_axi_dma_AWSIZE);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWBURST(grp_transfer_chunk_1_fu_87_m_axi_dma_AWBURST);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWLOCK(grp_transfer_chunk_1_fu_87_m_axi_dma_AWLOCK);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWCACHE(grp_transfer_chunk_1_fu_87_m_axi_dma_AWCACHE);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWPROT(grp_transfer_chunk_1_fu_87_m_axi_dma_AWPROT);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWQOS(grp_transfer_chunk_1_fu_87_m_axi_dma_AWQOS);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWREGION(grp_transfer_chunk_1_fu_87_m_axi_dma_AWREGION);
    grp_transfer_chunk_1_fu_87->m_axi_dma_AWUSER(grp_transfer_chunk_1_fu_87_m_axi_dma_AWUSER);
    grp_transfer_chunk_1_fu_87->m_axi_dma_WVALID(grp_transfer_chunk_1_fu_87_m_axi_dma_WVALID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_WREADY(dma0_WREADY);
    grp_transfer_chunk_1_fu_87->m_axi_dma_WDATA(grp_transfer_chunk_1_fu_87_m_axi_dma_WDATA);
    grp_transfer_chunk_1_fu_87->m_axi_dma_WSTRB(grp_transfer_chunk_1_fu_87_m_axi_dma_WSTRB);
    grp_transfer_chunk_1_fu_87->m_axi_dma_WLAST(grp_transfer_chunk_1_fu_87_m_axi_dma_WLAST);
    grp_transfer_chunk_1_fu_87->m_axi_dma_WID(grp_transfer_chunk_1_fu_87_m_axi_dma_WID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_WUSER(grp_transfer_chunk_1_fu_87_m_axi_dma_WUSER);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARVALID(grp_transfer_chunk_1_fu_87_m_axi_dma_ARVALID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARREADY(dma0_ARREADY);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARADDR(grp_transfer_chunk_1_fu_87_m_axi_dma_ARADDR);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARID(grp_transfer_chunk_1_fu_87_m_axi_dma_ARID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARLEN(grp_transfer_chunk_1_fu_87_m_axi_dma_ARLEN);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARSIZE(grp_transfer_chunk_1_fu_87_m_axi_dma_ARSIZE);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARBURST(grp_transfer_chunk_1_fu_87_m_axi_dma_ARBURST);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARLOCK(grp_transfer_chunk_1_fu_87_m_axi_dma_ARLOCK);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARCACHE(grp_transfer_chunk_1_fu_87_m_axi_dma_ARCACHE);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARPROT(grp_transfer_chunk_1_fu_87_m_axi_dma_ARPROT);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARQOS(grp_transfer_chunk_1_fu_87_m_axi_dma_ARQOS);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARREGION(grp_transfer_chunk_1_fu_87_m_axi_dma_ARREGION);
    grp_transfer_chunk_1_fu_87->m_axi_dma_ARUSER(grp_transfer_chunk_1_fu_87_m_axi_dma_ARUSER);
    grp_transfer_chunk_1_fu_87->m_axi_dma_RVALID(dma0_RVALID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_RREADY(grp_transfer_chunk_1_fu_87_m_axi_dma_RREADY);
    grp_transfer_chunk_1_fu_87->m_axi_dma_RDATA(dma0_RDATA);
    grp_transfer_chunk_1_fu_87->m_axi_dma_RLAST(dma0_RLAST);
    grp_transfer_chunk_1_fu_87->m_axi_dma_RID(dma0_RID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_RUSER(dma0_RUSER);
    grp_transfer_chunk_1_fu_87->m_axi_dma_RRESP(dma0_RRESP);
    grp_transfer_chunk_1_fu_87->m_axi_dma_BVALID(dma0_BVALID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_BREADY(grp_transfer_chunk_1_fu_87_m_axi_dma_BREADY);
    grp_transfer_chunk_1_fu_87->m_axi_dma_BRESP(dma0_BRESP);
    grp_transfer_chunk_1_fu_87->m_axi_dma_BID(dma0_BID);
    grp_transfer_chunk_1_fu_87->m_axi_dma_BUSER(dma0_BUSER);
    grp_transfer_chunk_1_fu_87->row(input_row_reg_190);
    grp_transfer_chunk_1_fu_87->col(tmp_2_reg_196);
    grp_transfer_chunk_fu_95 = new transfer_chunk("grp_transfer_chunk_fu_95");
    grp_transfer_chunk_fu_95->ap_clk(ap_clk);
    grp_transfer_chunk_fu_95->ap_rst(ap_rst_n_inv);
    grp_transfer_chunk_fu_95->ap_start(grp_transfer_chunk_fu_95_ap_start);
    grp_transfer_chunk_fu_95->ap_done(grp_transfer_chunk_fu_95_ap_done);
    grp_transfer_chunk_fu_95->ap_idle(grp_transfer_chunk_fu_95_ap_idle);
    grp_transfer_chunk_fu_95->ap_ready(grp_transfer_chunk_fu_95_ap_ready);
    grp_transfer_chunk_fu_95->m_axi_dma_AWVALID(grp_transfer_chunk_fu_95_m_axi_dma_AWVALID);
    grp_transfer_chunk_fu_95->m_axi_dma_AWREADY(dma0_AWREADY);
    grp_transfer_chunk_fu_95->m_axi_dma_AWADDR(grp_transfer_chunk_fu_95_m_axi_dma_AWADDR);
    grp_transfer_chunk_fu_95->m_axi_dma_AWID(grp_transfer_chunk_fu_95_m_axi_dma_AWID);
    grp_transfer_chunk_fu_95->m_axi_dma_AWLEN(grp_transfer_chunk_fu_95_m_axi_dma_AWLEN);
    grp_transfer_chunk_fu_95->m_axi_dma_AWSIZE(grp_transfer_chunk_fu_95_m_axi_dma_AWSIZE);
    grp_transfer_chunk_fu_95->m_axi_dma_AWBURST(grp_transfer_chunk_fu_95_m_axi_dma_AWBURST);
    grp_transfer_chunk_fu_95->m_axi_dma_AWLOCK(grp_transfer_chunk_fu_95_m_axi_dma_AWLOCK);
    grp_transfer_chunk_fu_95->m_axi_dma_AWCACHE(grp_transfer_chunk_fu_95_m_axi_dma_AWCACHE);
    grp_transfer_chunk_fu_95->m_axi_dma_AWPROT(grp_transfer_chunk_fu_95_m_axi_dma_AWPROT);
    grp_transfer_chunk_fu_95->m_axi_dma_AWQOS(grp_transfer_chunk_fu_95_m_axi_dma_AWQOS);
    grp_transfer_chunk_fu_95->m_axi_dma_AWREGION(grp_transfer_chunk_fu_95_m_axi_dma_AWREGION);
    grp_transfer_chunk_fu_95->m_axi_dma_AWUSER(grp_transfer_chunk_fu_95_m_axi_dma_AWUSER);
    grp_transfer_chunk_fu_95->m_axi_dma_WVALID(grp_transfer_chunk_fu_95_m_axi_dma_WVALID);
    grp_transfer_chunk_fu_95->m_axi_dma_WREADY(dma0_WREADY);
    grp_transfer_chunk_fu_95->m_axi_dma_WDATA(grp_transfer_chunk_fu_95_m_axi_dma_WDATA);
    grp_transfer_chunk_fu_95->m_axi_dma_WSTRB(grp_transfer_chunk_fu_95_m_axi_dma_WSTRB);
    grp_transfer_chunk_fu_95->m_axi_dma_WLAST(grp_transfer_chunk_fu_95_m_axi_dma_WLAST);
    grp_transfer_chunk_fu_95->m_axi_dma_WID(grp_transfer_chunk_fu_95_m_axi_dma_WID);
    grp_transfer_chunk_fu_95->m_axi_dma_WUSER(grp_transfer_chunk_fu_95_m_axi_dma_WUSER);
    grp_transfer_chunk_fu_95->m_axi_dma_ARVALID(grp_transfer_chunk_fu_95_m_axi_dma_ARVALID);
    grp_transfer_chunk_fu_95->m_axi_dma_ARREADY(dma0_ARREADY);
    grp_transfer_chunk_fu_95->m_axi_dma_ARADDR(grp_transfer_chunk_fu_95_m_axi_dma_ARADDR);
    grp_transfer_chunk_fu_95->m_axi_dma_ARID(grp_transfer_chunk_fu_95_m_axi_dma_ARID);
    grp_transfer_chunk_fu_95->m_axi_dma_ARLEN(grp_transfer_chunk_fu_95_m_axi_dma_ARLEN);
    grp_transfer_chunk_fu_95->m_axi_dma_ARSIZE(grp_transfer_chunk_fu_95_m_axi_dma_ARSIZE);
    grp_transfer_chunk_fu_95->m_axi_dma_ARBURST(grp_transfer_chunk_fu_95_m_axi_dma_ARBURST);
    grp_transfer_chunk_fu_95->m_axi_dma_ARLOCK(grp_transfer_chunk_fu_95_m_axi_dma_ARLOCK);
    grp_transfer_chunk_fu_95->m_axi_dma_ARCACHE(grp_transfer_chunk_fu_95_m_axi_dma_ARCACHE);
    grp_transfer_chunk_fu_95->m_axi_dma_ARPROT(grp_transfer_chunk_fu_95_m_axi_dma_ARPROT);
    grp_transfer_chunk_fu_95->m_axi_dma_ARQOS(grp_transfer_chunk_fu_95_m_axi_dma_ARQOS);
    grp_transfer_chunk_fu_95->m_axi_dma_ARREGION(grp_transfer_chunk_fu_95_m_axi_dma_ARREGION);
    grp_transfer_chunk_fu_95->m_axi_dma_ARUSER(grp_transfer_chunk_fu_95_m_axi_dma_ARUSER);
    grp_transfer_chunk_fu_95->m_axi_dma_RVALID(dma0_RVALID);
    grp_transfer_chunk_fu_95->m_axi_dma_RREADY(grp_transfer_chunk_fu_95_m_axi_dma_RREADY);
    grp_transfer_chunk_fu_95->m_axi_dma_RDATA(dma0_RDATA);
    grp_transfer_chunk_fu_95->m_axi_dma_RLAST(dma0_RLAST);
    grp_transfer_chunk_fu_95->m_axi_dma_RID(dma0_RID);
    grp_transfer_chunk_fu_95->m_axi_dma_RUSER(dma0_RUSER);
    grp_transfer_chunk_fu_95->m_axi_dma_RRESP(dma0_RRESP);
    grp_transfer_chunk_fu_95->m_axi_dma_BVALID(dma0_BVALID);
    grp_transfer_chunk_fu_95->m_axi_dma_BREADY(grp_transfer_chunk_fu_95_m_axi_dma_BREADY);
    grp_transfer_chunk_fu_95->m_axi_dma_BRESP(dma0_BRESP);
    grp_transfer_chunk_fu_95->m_axi_dma_BID(dma0_BID);
    grp_transfer_chunk_fu_95->m_axi_dma_BUSER(dma0_BUSER);
    grp_transfer_chunk_fu_95->row(input_row_reg_190);
    grp_transfer_chunk_fu_95->col(tmp_2_reg_196);
    dma_master_driverbkb_U11 = new dma_master_driverbkb<1,22,18,12,11>("dma_master_driverbkb_U11");
    dma_master_driverbkb_U11->clk(ap_clk);
    dma_master_driverbkb_U11->reset(ap_rst_n_inv);
    dma_master_driverbkb_U11->start(grp_fu_141_ap_start);
    dma_master_driverbkb_U11->done(grp_fu_141_ap_done);
    dma_master_driverbkb_U11->din0(tmp_fu_120_p3);
    dma_master_driverbkb_U11->din1(grp_fu_141_p1);
    dma_master_driverbkb_U11->ce(ap_var_for_const0);
    dma_master_driverbkb_U11->dout(grp_fu_141_p2);
    dma_master_drivercud_U12 = new dma_master_drivercud<1,1,20,18,38>("dma_master_drivercud_U12");
    dma_master_drivercud_U12->din0(mul_fu_160_p0);
    dma_master_drivercud_U12->din1(mul_fu_160_p1);
    dma_master_drivercud_U12->dout(mul_fu_160_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_chunk_ctr_1_fu_114_p2);
    sensitive << ( chunk_ctr_reg_76 );

    SC_METHOD(thread_dma0_ARADDR);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARADDR );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARADDR );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARBURST);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARBURST );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARBURST );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARCACHE);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARCACHE );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARCACHE );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARID);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARID );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARLEN);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARLEN );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARLEN );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARLOCK);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARLOCK );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARLOCK );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARPROT);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARPROT );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARPROT );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARQOS);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARQOS );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARQOS );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARREGION);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARREGION );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARREGION );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARSIZE);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARSIZE );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARSIZE );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARUSER);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARUSER );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARUSER );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_ARVALID);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_ARVALID );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_ARVALID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWADDR);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWADDR );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWADDR );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWBURST);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWBURST );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWBURST );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWCACHE);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWCACHE );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWCACHE );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWID);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWID );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWLEN);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWLEN );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWLEN );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWLOCK);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWLOCK );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWLOCK );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWPROT);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWPROT );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWPROT );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWQOS);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWQOS );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWQOS );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWREGION);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWREGION );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWREGION );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWSIZE);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWSIZE );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWSIZE );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWUSER);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWUSER );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWUSER );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_AWVALID);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_AWVALID );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_AWVALID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_BREADY);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_BREADY );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_BREADY );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_RREADY);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_RREADY );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_RREADY );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_WDATA);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_WDATA );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_WDATA );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_WID);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_WID );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_WID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_WLAST);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_WLAST );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_WLAST );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_WSTRB);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_WSTRB );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_WSTRB );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_WUSER);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_WUSER );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_WUSER );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_dma0_WVALID);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_transfer_chunk_1_fu_87_m_axi_dma_WVALID );
    sensitive << ( grp_transfer_chunk_fu_95_m_axi_dma_WVALID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_exitcond_fu_108_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( chunk_ctr_reg_76 );

    SC_METHOD(thread_frame_trigger_V_read_read_fu_70_p2);
    sensitive << ( frame_trigger_V );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_141_ap_start);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_108_p2 );

    SC_METHOD(thread_grp_fu_141_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_transfer_chunk_1_fu_87_ap_start);
    sensitive << ( grp_transfer_chunk_1_fu_87_ap_start_reg );

    SC_METHOD(thread_grp_transfer_chunk_fu_95_ap_start);
    sensitive << ( grp_transfer_chunk_fu_95_ap_start_reg );

    SC_METHOD(thread_input_row_fu_147_p3);
    sensitive << ( tmp_1_reg_185 );

    SC_METHOD(thread_m_axi_dma1_ARADDR);

    SC_METHOD(thread_m_axi_dma1_ARBURST);

    SC_METHOD(thread_m_axi_dma1_ARCACHE);

    SC_METHOD(thread_m_axi_dma1_ARID);

    SC_METHOD(thread_m_axi_dma1_ARLEN);

    SC_METHOD(thread_m_axi_dma1_ARLOCK);

    SC_METHOD(thread_m_axi_dma1_ARPROT);

    SC_METHOD(thread_m_axi_dma1_ARQOS);

    SC_METHOD(thread_m_axi_dma1_ARREGION);

    SC_METHOD(thread_m_axi_dma1_ARSIZE);

    SC_METHOD(thread_m_axi_dma1_ARUSER);

    SC_METHOD(thread_m_axi_dma1_ARVALID);

    SC_METHOD(thread_m_axi_dma1_AWADDR);

    SC_METHOD(thread_m_axi_dma1_AWBURST);

    SC_METHOD(thread_m_axi_dma1_AWCACHE);

    SC_METHOD(thread_m_axi_dma1_AWID);

    SC_METHOD(thread_m_axi_dma1_AWLEN);

    SC_METHOD(thread_m_axi_dma1_AWLOCK);

    SC_METHOD(thread_m_axi_dma1_AWPROT);

    SC_METHOD(thread_m_axi_dma1_AWQOS);

    SC_METHOD(thread_m_axi_dma1_AWREGION);

    SC_METHOD(thread_m_axi_dma1_AWSIZE);

    SC_METHOD(thread_m_axi_dma1_AWUSER);

    SC_METHOD(thread_m_axi_dma1_AWVALID);

    SC_METHOD(thread_m_axi_dma1_BREADY);

    SC_METHOD(thread_m_axi_dma1_RREADY);

    SC_METHOD(thread_m_axi_dma1_WDATA);

    SC_METHOD(thread_m_axi_dma1_WID);

    SC_METHOD(thread_m_axi_dma1_WLAST);

    SC_METHOD(thread_m_axi_dma1_WSTRB);

    SC_METHOD(thread_m_axi_dma1_WUSER);

    SC_METHOD(thread_m_axi_dma1_WVALID);

    SC_METHOD(thread_mul_fu_160_p0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_mul_fu_160_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( mul_fu_160_p10 );

    SC_METHOD(thread_mul_fu_160_p10);
    sensitive << ( tmp_fu_120_p3 );

    SC_METHOD(thread_tmp_2_fu_155_p1);
    sensitive << ( grp_fu_141_p2 );

    SC_METHOD(thread_tmp_fu_120_p3);
    sensitive << ( chunk_ctr_reg_76 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( frame_trigger_V_read_read_fu_70_p2 );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_108_p2 );
    sensitive << ( grp_transfer_chunk_1_fu_87_ap_done );
    sensitive << ( grp_transfer_chunk_fu_95_ap_done );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000001";
    grp_transfer_chunk_1_fu_87_ap_start_reg = SC_LOGIC_0;
    grp_transfer_chunk_fu_95_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dma_master_driver_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_dma0_AWVALID, "(port)m_axi_dma0_AWVALID");
    sc_trace(mVcdFile, m_axi_dma0_AWREADY, "(port)m_axi_dma0_AWREADY");
    sc_trace(mVcdFile, m_axi_dma0_AWADDR, "(port)m_axi_dma0_AWADDR");
    sc_trace(mVcdFile, m_axi_dma0_AWID, "(port)m_axi_dma0_AWID");
    sc_trace(mVcdFile, m_axi_dma0_AWLEN, "(port)m_axi_dma0_AWLEN");
    sc_trace(mVcdFile, m_axi_dma0_AWSIZE, "(port)m_axi_dma0_AWSIZE");
    sc_trace(mVcdFile, m_axi_dma0_AWBURST, "(port)m_axi_dma0_AWBURST");
    sc_trace(mVcdFile, m_axi_dma0_AWLOCK, "(port)m_axi_dma0_AWLOCK");
    sc_trace(mVcdFile, m_axi_dma0_AWCACHE, "(port)m_axi_dma0_AWCACHE");
    sc_trace(mVcdFile, m_axi_dma0_AWPROT, "(port)m_axi_dma0_AWPROT");
    sc_trace(mVcdFile, m_axi_dma0_AWQOS, "(port)m_axi_dma0_AWQOS");
    sc_trace(mVcdFile, m_axi_dma0_AWREGION, "(port)m_axi_dma0_AWREGION");
    sc_trace(mVcdFile, m_axi_dma0_AWUSER, "(port)m_axi_dma0_AWUSER");
    sc_trace(mVcdFile, m_axi_dma0_WVALID, "(port)m_axi_dma0_WVALID");
    sc_trace(mVcdFile, m_axi_dma0_WREADY, "(port)m_axi_dma0_WREADY");
    sc_trace(mVcdFile, m_axi_dma0_WDATA, "(port)m_axi_dma0_WDATA");
    sc_trace(mVcdFile, m_axi_dma0_WSTRB, "(port)m_axi_dma0_WSTRB");
    sc_trace(mVcdFile, m_axi_dma0_WLAST, "(port)m_axi_dma0_WLAST");
    sc_trace(mVcdFile, m_axi_dma0_WID, "(port)m_axi_dma0_WID");
    sc_trace(mVcdFile, m_axi_dma0_WUSER, "(port)m_axi_dma0_WUSER");
    sc_trace(mVcdFile, m_axi_dma0_ARVALID, "(port)m_axi_dma0_ARVALID");
    sc_trace(mVcdFile, m_axi_dma0_ARREADY, "(port)m_axi_dma0_ARREADY");
    sc_trace(mVcdFile, m_axi_dma0_ARADDR, "(port)m_axi_dma0_ARADDR");
    sc_trace(mVcdFile, m_axi_dma0_ARID, "(port)m_axi_dma0_ARID");
    sc_trace(mVcdFile, m_axi_dma0_ARLEN, "(port)m_axi_dma0_ARLEN");
    sc_trace(mVcdFile, m_axi_dma0_ARSIZE, "(port)m_axi_dma0_ARSIZE");
    sc_trace(mVcdFile, m_axi_dma0_ARBURST, "(port)m_axi_dma0_ARBURST");
    sc_trace(mVcdFile, m_axi_dma0_ARLOCK, "(port)m_axi_dma0_ARLOCK");
    sc_trace(mVcdFile, m_axi_dma0_ARCACHE, "(port)m_axi_dma0_ARCACHE");
    sc_trace(mVcdFile, m_axi_dma0_ARPROT, "(port)m_axi_dma0_ARPROT");
    sc_trace(mVcdFile, m_axi_dma0_ARQOS, "(port)m_axi_dma0_ARQOS");
    sc_trace(mVcdFile, m_axi_dma0_ARREGION, "(port)m_axi_dma0_ARREGION");
    sc_trace(mVcdFile, m_axi_dma0_ARUSER, "(port)m_axi_dma0_ARUSER");
    sc_trace(mVcdFile, m_axi_dma0_RVALID, "(port)m_axi_dma0_RVALID");
    sc_trace(mVcdFile, m_axi_dma0_RREADY, "(port)m_axi_dma0_RREADY");
    sc_trace(mVcdFile, m_axi_dma0_RDATA, "(port)m_axi_dma0_RDATA");
    sc_trace(mVcdFile, m_axi_dma0_RLAST, "(port)m_axi_dma0_RLAST");
    sc_trace(mVcdFile, m_axi_dma0_RID, "(port)m_axi_dma0_RID");
    sc_trace(mVcdFile, m_axi_dma0_RUSER, "(port)m_axi_dma0_RUSER");
    sc_trace(mVcdFile, m_axi_dma0_RRESP, "(port)m_axi_dma0_RRESP");
    sc_trace(mVcdFile, m_axi_dma0_BVALID, "(port)m_axi_dma0_BVALID");
    sc_trace(mVcdFile, m_axi_dma0_BREADY, "(port)m_axi_dma0_BREADY");
    sc_trace(mVcdFile, m_axi_dma0_BRESP, "(port)m_axi_dma0_BRESP");
    sc_trace(mVcdFile, m_axi_dma0_BID, "(port)m_axi_dma0_BID");
    sc_trace(mVcdFile, m_axi_dma0_BUSER, "(port)m_axi_dma0_BUSER");
    sc_trace(mVcdFile, m_axi_dma1_AWVALID, "(port)m_axi_dma1_AWVALID");
    sc_trace(mVcdFile, m_axi_dma1_AWREADY, "(port)m_axi_dma1_AWREADY");
    sc_trace(mVcdFile, m_axi_dma1_AWADDR, "(port)m_axi_dma1_AWADDR");
    sc_trace(mVcdFile, m_axi_dma1_AWID, "(port)m_axi_dma1_AWID");
    sc_trace(mVcdFile, m_axi_dma1_AWLEN, "(port)m_axi_dma1_AWLEN");
    sc_trace(mVcdFile, m_axi_dma1_AWSIZE, "(port)m_axi_dma1_AWSIZE");
    sc_trace(mVcdFile, m_axi_dma1_AWBURST, "(port)m_axi_dma1_AWBURST");
    sc_trace(mVcdFile, m_axi_dma1_AWLOCK, "(port)m_axi_dma1_AWLOCK");
    sc_trace(mVcdFile, m_axi_dma1_AWCACHE, "(port)m_axi_dma1_AWCACHE");
    sc_trace(mVcdFile, m_axi_dma1_AWPROT, "(port)m_axi_dma1_AWPROT");
    sc_trace(mVcdFile, m_axi_dma1_AWQOS, "(port)m_axi_dma1_AWQOS");
    sc_trace(mVcdFile, m_axi_dma1_AWREGION, "(port)m_axi_dma1_AWREGION");
    sc_trace(mVcdFile, m_axi_dma1_AWUSER, "(port)m_axi_dma1_AWUSER");
    sc_trace(mVcdFile, m_axi_dma1_WVALID, "(port)m_axi_dma1_WVALID");
    sc_trace(mVcdFile, m_axi_dma1_WREADY, "(port)m_axi_dma1_WREADY");
    sc_trace(mVcdFile, m_axi_dma1_WDATA, "(port)m_axi_dma1_WDATA");
    sc_trace(mVcdFile, m_axi_dma1_WSTRB, "(port)m_axi_dma1_WSTRB");
    sc_trace(mVcdFile, m_axi_dma1_WLAST, "(port)m_axi_dma1_WLAST");
    sc_trace(mVcdFile, m_axi_dma1_WID, "(port)m_axi_dma1_WID");
    sc_trace(mVcdFile, m_axi_dma1_WUSER, "(port)m_axi_dma1_WUSER");
    sc_trace(mVcdFile, m_axi_dma1_ARVALID, "(port)m_axi_dma1_ARVALID");
    sc_trace(mVcdFile, m_axi_dma1_ARREADY, "(port)m_axi_dma1_ARREADY");
    sc_trace(mVcdFile, m_axi_dma1_ARADDR, "(port)m_axi_dma1_ARADDR");
    sc_trace(mVcdFile, m_axi_dma1_ARID, "(port)m_axi_dma1_ARID");
    sc_trace(mVcdFile, m_axi_dma1_ARLEN, "(port)m_axi_dma1_ARLEN");
    sc_trace(mVcdFile, m_axi_dma1_ARSIZE, "(port)m_axi_dma1_ARSIZE");
    sc_trace(mVcdFile, m_axi_dma1_ARBURST, "(port)m_axi_dma1_ARBURST");
    sc_trace(mVcdFile, m_axi_dma1_ARLOCK, "(port)m_axi_dma1_ARLOCK");
    sc_trace(mVcdFile, m_axi_dma1_ARCACHE, "(port)m_axi_dma1_ARCACHE");
    sc_trace(mVcdFile, m_axi_dma1_ARPROT, "(port)m_axi_dma1_ARPROT");
    sc_trace(mVcdFile, m_axi_dma1_ARQOS, "(port)m_axi_dma1_ARQOS");
    sc_trace(mVcdFile, m_axi_dma1_ARREGION, "(port)m_axi_dma1_ARREGION");
    sc_trace(mVcdFile, m_axi_dma1_ARUSER, "(port)m_axi_dma1_ARUSER");
    sc_trace(mVcdFile, m_axi_dma1_RVALID, "(port)m_axi_dma1_RVALID");
    sc_trace(mVcdFile, m_axi_dma1_RREADY, "(port)m_axi_dma1_RREADY");
    sc_trace(mVcdFile, m_axi_dma1_RDATA, "(port)m_axi_dma1_RDATA");
    sc_trace(mVcdFile, m_axi_dma1_RLAST, "(port)m_axi_dma1_RLAST");
    sc_trace(mVcdFile, m_axi_dma1_RID, "(port)m_axi_dma1_RID");
    sc_trace(mVcdFile, m_axi_dma1_RUSER, "(port)m_axi_dma1_RUSER");
    sc_trace(mVcdFile, m_axi_dma1_RRESP, "(port)m_axi_dma1_RRESP");
    sc_trace(mVcdFile, m_axi_dma1_BVALID, "(port)m_axi_dma1_BVALID");
    sc_trace(mVcdFile, m_axi_dma1_BREADY, "(port)m_axi_dma1_BREADY");
    sc_trace(mVcdFile, m_axi_dma1_BRESP, "(port)m_axi_dma1_BRESP");
    sc_trace(mVcdFile, m_axi_dma1_BID, "(port)m_axi_dma1_BID");
    sc_trace(mVcdFile, m_axi_dma1_BUSER, "(port)m_axi_dma1_BUSER");
    sc_trace(mVcdFile, frame_trigger_V, "(port)frame_trigger_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, dma0_AWVALID, "dma0_AWVALID");
    sc_trace(mVcdFile, dma0_AWREADY, "dma0_AWREADY");
    sc_trace(mVcdFile, dma0_AWADDR, "dma0_AWADDR");
    sc_trace(mVcdFile, dma0_AWID, "dma0_AWID");
    sc_trace(mVcdFile, dma0_AWLEN, "dma0_AWLEN");
    sc_trace(mVcdFile, dma0_AWSIZE, "dma0_AWSIZE");
    sc_trace(mVcdFile, dma0_AWBURST, "dma0_AWBURST");
    sc_trace(mVcdFile, dma0_AWLOCK, "dma0_AWLOCK");
    sc_trace(mVcdFile, dma0_AWCACHE, "dma0_AWCACHE");
    sc_trace(mVcdFile, dma0_AWPROT, "dma0_AWPROT");
    sc_trace(mVcdFile, dma0_AWQOS, "dma0_AWQOS");
    sc_trace(mVcdFile, dma0_AWREGION, "dma0_AWREGION");
    sc_trace(mVcdFile, dma0_AWUSER, "dma0_AWUSER");
    sc_trace(mVcdFile, dma0_WVALID, "dma0_WVALID");
    sc_trace(mVcdFile, dma0_WREADY, "dma0_WREADY");
    sc_trace(mVcdFile, dma0_WDATA, "dma0_WDATA");
    sc_trace(mVcdFile, dma0_WSTRB, "dma0_WSTRB");
    sc_trace(mVcdFile, dma0_WLAST, "dma0_WLAST");
    sc_trace(mVcdFile, dma0_WID, "dma0_WID");
    sc_trace(mVcdFile, dma0_WUSER, "dma0_WUSER");
    sc_trace(mVcdFile, dma0_ARVALID, "dma0_ARVALID");
    sc_trace(mVcdFile, dma0_ARREADY, "dma0_ARREADY");
    sc_trace(mVcdFile, dma0_ARADDR, "dma0_ARADDR");
    sc_trace(mVcdFile, dma0_ARID, "dma0_ARID");
    sc_trace(mVcdFile, dma0_ARLEN, "dma0_ARLEN");
    sc_trace(mVcdFile, dma0_ARSIZE, "dma0_ARSIZE");
    sc_trace(mVcdFile, dma0_ARBURST, "dma0_ARBURST");
    sc_trace(mVcdFile, dma0_ARLOCK, "dma0_ARLOCK");
    sc_trace(mVcdFile, dma0_ARCACHE, "dma0_ARCACHE");
    sc_trace(mVcdFile, dma0_ARPROT, "dma0_ARPROT");
    sc_trace(mVcdFile, dma0_ARQOS, "dma0_ARQOS");
    sc_trace(mVcdFile, dma0_ARREGION, "dma0_ARREGION");
    sc_trace(mVcdFile, dma0_ARUSER, "dma0_ARUSER");
    sc_trace(mVcdFile, dma0_RVALID, "dma0_RVALID");
    sc_trace(mVcdFile, dma0_RREADY, "dma0_RREADY");
    sc_trace(mVcdFile, dma0_RDATA, "dma0_RDATA");
    sc_trace(mVcdFile, dma0_RLAST, "dma0_RLAST");
    sc_trace(mVcdFile, dma0_RID, "dma0_RID");
    sc_trace(mVcdFile, dma0_RUSER, "dma0_RUSER");
    sc_trace(mVcdFile, dma0_RRESP, "dma0_RRESP");
    sc_trace(mVcdFile, dma0_BVALID, "dma0_BVALID");
    sc_trace(mVcdFile, dma0_BREADY, "dma0_BREADY");
    sc_trace(mVcdFile, dma0_BRESP, "dma0_BRESP");
    sc_trace(mVcdFile, dma0_BID, "dma0_BID");
    sc_trace(mVcdFile, dma0_BUSER, "dma0_BUSER");
    sc_trace(mVcdFile, frame_trigger_V_read_read_fu_70_p2, "frame_trigger_V_read_read_fu_70_p2");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, chunk_ctr_1_fu_114_p2, "chunk_ctr_1_fu_114_p2");
    sc_trace(mVcdFile, chunk_ctr_1_reg_175, "chunk_ctr_1_reg_175");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_fu_120_p3, "tmp_fu_120_p3");
    sc_trace(mVcdFile, exitcond_fu_108_p2, "exitcond_fu_108_p2");
    sc_trace(mVcdFile, tmp_1_reg_185, "tmp_1_reg_185");
    sc_trace(mVcdFile, input_row_fu_147_p3, "input_row_fu_147_p3");
    sc_trace(mVcdFile, input_row_reg_190, "input_row_reg_190");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_2_fu_155_p1, "tmp_2_fu_155_p1");
    sc_trace(mVcdFile, tmp_2_reg_196, "tmp_2_reg_196");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_ap_start, "grp_transfer_chunk_1_fu_87_ap_start");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_ap_done, "grp_transfer_chunk_1_fu_87_ap_done");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_ap_idle, "grp_transfer_chunk_1_fu_87_ap_idle");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_ap_ready, "grp_transfer_chunk_1_fu_87_ap_ready");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWVALID, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWVALID");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWADDR, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWADDR");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWID, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWID");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWLEN, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWLEN");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWSIZE, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWSIZE");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWBURST, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWBURST");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWLOCK, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWLOCK");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWCACHE, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWCACHE");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWPROT, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWPROT");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWQOS, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWQOS");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWREGION, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWREGION");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_AWUSER, "grp_transfer_chunk_1_fu_87_m_axi_dma_AWUSER");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_WVALID, "grp_transfer_chunk_1_fu_87_m_axi_dma_WVALID");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_WDATA, "grp_transfer_chunk_1_fu_87_m_axi_dma_WDATA");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_WSTRB, "grp_transfer_chunk_1_fu_87_m_axi_dma_WSTRB");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_WLAST, "grp_transfer_chunk_1_fu_87_m_axi_dma_WLAST");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_WID, "grp_transfer_chunk_1_fu_87_m_axi_dma_WID");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_WUSER, "grp_transfer_chunk_1_fu_87_m_axi_dma_WUSER");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARVALID, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARVALID");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARADDR, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARADDR");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARID, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARID");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARLEN, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARLEN");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARSIZE, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARSIZE");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARBURST, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARBURST");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARLOCK, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARLOCK");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARCACHE, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARCACHE");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARPROT, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARPROT");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARQOS, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARQOS");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARREGION, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARREGION");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_ARUSER, "grp_transfer_chunk_1_fu_87_m_axi_dma_ARUSER");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_RREADY, "grp_transfer_chunk_1_fu_87_m_axi_dma_RREADY");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_m_axi_dma_BREADY, "grp_transfer_chunk_1_fu_87_m_axi_dma_BREADY");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_ap_start, "grp_transfer_chunk_fu_95_ap_start");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_ap_done, "grp_transfer_chunk_fu_95_ap_done");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_ap_idle, "grp_transfer_chunk_fu_95_ap_idle");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_ap_ready, "grp_transfer_chunk_fu_95_ap_ready");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWVALID, "grp_transfer_chunk_fu_95_m_axi_dma_AWVALID");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWADDR, "grp_transfer_chunk_fu_95_m_axi_dma_AWADDR");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWID, "grp_transfer_chunk_fu_95_m_axi_dma_AWID");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWLEN, "grp_transfer_chunk_fu_95_m_axi_dma_AWLEN");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWSIZE, "grp_transfer_chunk_fu_95_m_axi_dma_AWSIZE");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWBURST, "grp_transfer_chunk_fu_95_m_axi_dma_AWBURST");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWLOCK, "grp_transfer_chunk_fu_95_m_axi_dma_AWLOCK");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWCACHE, "grp_transfer_chunk_fu_95_m_axi_dma_AWCACHE");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWPROT, "grp_transfer_chunk_fu_95_m_axi_dma_AWPROT");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWQOS, "grp_transfer_chunk_fu_95_m_axi_dma_AWQOS");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWREGION, "grp_transfer_chunk_fu_95_m_axi_dma_AWREGION");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_AWUSER, "grp_transfer_chunk_fu_95_m_axi_dma_AWUSER");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_WVALID, "grp_transfer_chunk_fu_95_m_axi_dma_WVALID");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_WDATA, "grp_transfer_chunk_fu_95_m_axi_dma_WDATA");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_WSTRB, "grp_transfer_chunk_fu_95_m_axi_dma_WSTRB");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_WLAST, "grp_transfer_chunk_fu_95_m_axi_dma_WLAST");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_WID, "grp_transfer_chunk_fu_95_m_axi_dma_WID");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_WUSER, "grp_transfer_chunk_fu_95_m_axi_dma_WUSER");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARVALID, "grp_transfer_chunk_fu_95_m_axi_dma_ARVALID");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARADDR, "grp_transfer_chunk_fu_95_m_axi_dma_ARADDR");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARID, "grp_transfer_chunk_fu_95_m_axi_dma_ARID");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARLEN, "grp_transfer_chunk_fu_95_m_axi_dma_ARLEN");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARSIZE, "grp_transfer_chunk_fu_95_m_axi_dma_ARSIZE");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARBURST, "grp_transfer_chunk_fu_95_m_axi_dma_ARBURST");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARLOCK, "grp_transfer_chunk_fu_95_m_axi_dma_ARLOCK");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARCACHE, "grp_transfer_chunk_fu_95_m_axi_dma_ARCACHE");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARPROT, "grp_transfer_chunk_fu_95_m_axi_dma_ARPROT");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARQOS, "grp_transfer_chunk_fu_95_m_axi_dma_ARQOS");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARREGION, "grp_transfer_chunk_fu_95_m_axi_dma_ARREGION");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_ARUSER, "grp_transfer_chunk_fu_95_m_axi_dma_ARUSER");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_RREADY, "grp_transfer_chunk_fu_95_m_axi_dma_RREADY");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_m_axi_dma_BREADY, "grp_transfer_chunk_fu_95_m_axi_dma_BREADY");
    sc_trace(mVcdFile, chunk_ctr_reg_76, "chunk_ctr_reg_76");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, grp_transfer_chunk_1_fu_87_ap_start_reg, "grp_transfer_chunk_1_fu_87_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_transfer_chunk_fu_95_ap_start_reg, "grp_transfer_chunk_fu_95_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, mul_fu_160_p2, "mul_fu_160_p2");
    sc_trace(mVcdFile, grp_fu_141_p1, "grp_fu_141_p1");
    sc_trace(mVcdFile, grp_fu_141_p2, "grp_fu_141_p2");
    sc_trace(mVcdFile, mul_fu_160_p0, "mul_fu_160_p0");
    sc_trace(mVcdFile, mul_fu_160_p1, "mul_fu_160_p1");
    sc_trace(mVcdFile, grp_fu_141_ap_start, "grp_fu_141_ap_start");
    sc_trace(mVcdFile, grp_fu_141_ap_done, "grp_fu_141_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_fu_160_p10, "mul_fu_160_p10");
#endif

    }
    mHdltvinHandle.open("dma_master_driver.hdltvin.dat");
    mHdltvoutHandle.open("dma_master_driver.hdltvout.dat");
}

dma_master_driver::~dma_master_driver() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dma_master_driver_dma0_m_axi_U;
    delete grp_transfer_chunk_1_fu_87;
    delete grp_transfer_chunk_fu_95;
    delete dma_master_driverbkb_U11;
    delete dma_master_drivercud_U12;
}

void dma_master_driver::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dma_master_driver::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(grp_transfer_chunk_fu_95_ap_done.read(), ap_const_logic_1))) {
        chunk_ctr_reg_76 = chunk_ctr_1_reg_175.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(frame_trigger_V_read_read_fu_70_p2.read(), ap_const_lv1_0))) {
        chunk_ctr_reg_76 = ap_const_lv10_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_transfer_chunk_1_fu_87_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            grp_transfer_chunk_1_fu_87_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_transfer_chunk_1_fu_87_ap_ready.read())) {
            grp_transfer_chunk_1_fu_87_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_transfer_chunk_fu_95_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            grp_transfer_chunk_fu_95_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_transfer_chunk_fu_95_ap_ready.read())) {
            grp_transfer_chunk_fu_95_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        chunk_ctr_1_reg_175 = chunk_ctr_1_fu_114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        input_row_reg_190 = input_row_fu_147_p3.read();
        tmp_2_reg_196 = tmp_2_fu_155_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_108_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_185 = mul_fu_160_p2.read().range(36, 29);
    }
}

void dma_master_driver::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dma_master_driver::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dma_master_driver::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void dma_master_driver::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void dma_master_driver::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void dma_master_driver::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void dma_master_driver::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dma_master_driver::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void dma_master_driver::thread_chunk_ctr_1_fu_114_p2() {
    chunk_ctr_1_fu_114_p2 = (!chunk_ctr_reg_76.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(chunk_ctr_reg_76.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dma_master_driver::thread_dma0_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARADDR = grp_transfer_chunk_fu_95_m_axi_dma_ARADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARADDR = grp_transfer_chunk_1_fu_87_m_axi_dma_ARADDR.read();
    } else {
        dma0_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dma_master_driver::thread_dma0_ARBURST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARBURST = grp_transfer_chunk_fu_95_m_axi_dma_ARBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARBURST = grp_transfer_chunk_1_fu_87_m_axi_dma_ARBURST.read();
    } else {
        dma0_ARBURST =  (sc_lv<2>) ("XX");
    }
}

void dma_master_driver::thread_dma0_ARCACHE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARCACHE = grp_transfer_chunk_fu_95_m_axi_dma_ARCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARCACHE = grp_transfer_chunk_1_fu_87_m_axi_dma_ARCACHE.read();
    } else {
        dma0_ARCACHE =  (sc_lv<4>) ("XXXX");
    }
}

void dma_master_driver::thread_dma0_ARID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARID = grp_transfer_chunk_fu_95_m_axi_dma_ARID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARID = grp_transfer_chunk_1_fu_87_m_axi_dma_ARID.read();
    } else {
        dma0_ARID =  (sc_lv<1>) ("X");
    }
}

void dma_master_driver::thread_dma0_ARLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARLEN = grp_transfer_chunk_fu_95_m_axi_dma_ARLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARLEN = grp_transfer_chunk_1_fu_87_m_axi_dma_ARLEN.read();
    } else {
        dma0_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dma_master_driver::thread_dma0_ARLOCK() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARLOCK = grp_transfer_chunk_fu_95_m_axi_dma_ARLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARLOCK = grp_transfer_chunk_1_fu_87_m_axi_dma_ARLOCK.read();
    } else {
        dma0_ARLOCK =  (sc_lv<2>) ("XX");
    }
}

void dma_master_driver::thread_dma0_ARPROT() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARPROT = grp_transfer_chunk_fu_95_m_axi_dma_ARPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARPROT = grp_transfer_chunk_1_fu_87_m_axi_dma_ARPROT.read();
    } else {
        dma0_ARPROT =  (sc_lv<3>) ("XXX");
    }
}

void dma_master_driver::thread_dma0_ARQOS() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARQOS = grp_transfer_chunk_fu_95_m_axi_dma_ARQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARQOS = grp_transfer_chunk_1_fu_87_m_axi_dma_ARQOS.read();
    } else {
        dma0_ARQOS =  (sc_lv<4>) ("XXXX");
    }
}

void dma_master_driver::thread_dma0_ARREGION() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARREGION = grp_transfer_chunk_fu_95_m_axi_dma_ARREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARREGION = grp_transfer_chunk_1_fu_87_m_axi_dma_ARREGION.read();
    } else {
        dma0_ARREGION =  (sc_lv<4>) ("XXXX");
    }
}

void dma_master_driver::thread_dma0_ARSIZE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARSIZE = grp_transfer_chunk_fu_95_m_axi_dma_ARSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARSIZE = grp_transfer_chunk_1_fu_87_m_axi_dma_ARSIZE.read();
    } else {
        dma0_ARSIZE =  (sc_lv<3>) ("XXX");
    }
}

void dma_master_driver::thread_dma0_ARUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARUSER = grp_transfer_chunk_fu_95_m_axi_dma_ARUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARUSER = grp_transfer_chunk_1_fu_87_m_axi_dma_ARUSER.read();
    } else {
        dma0_ARUSER =  (sc_lv<1>) ("X");
    }
}

void dma_master_driver::thread_dma0_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_ARVALID = grp_transfer_chunk_fu_95_m_axi_dma_ARVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_ARVALID = grp_transfer_chunk_1_fu_87_m_axi_dma_ARVALID.read();
    } else {
        dma0_ARVALID = ap_const_logic_0;
    }
}

void dma_master_driver::thread_dma0_AWADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWADDR = grp_transfer_chunk_fu_95_m_axi_dma_AWADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWADDR = grp_transfer_chunk_1_fu_87_m_axi_dma_AWADDR.read();
    } else {
        dma0_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dma_master_driver::thread_dma0_AWBURST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWBURST = grp_transfer_chunk_fu_95_m_axi_dma_AWBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWBURST = grp_transfer_chunk_1_fu_87_m_axi_dma_AWBURST.read();
    } else {
        dma0_AWBURST =  (sc_lv<2>) ("XX");
    }
}

void dma_master_driver::thread_dma0_AWCACHE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWCACHE = grp_transfer_chunk_fu_95_m_axi_dma_AWCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWCACHE = grp_transfer_chunk_1_fu_87_m_axi_dma_AWCACHE.read();
    } else {
        dma0_AWCACHE =  (sc_lv<4>) ("XXXX");
    }
}

void dma_master_driver::thread_dma0_AWID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWID = grp_transfer_chunk_fu_95_m_axi_dma_AWID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWID = grp_transfer_chunk_1_fu_87_m_axi_dma_AWID.read();
    } else {
        dma0_AWID =  (sc_lv<1>) ("X");
    }
}

void dma_master_driver::thread_dma0_AWLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWLEN = grp_transfer_chunk_fu_95_m_axi_dma_AWLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWLEN = grp_transfer_chunk_1_fu_87_m_axi_dma_AWLEN.read();
    } else {
        dma0_AWLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dma_master_driver::thread_dma0_AWLOCK() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWLOCK = grp_transfer_chunk_fu_95_m_axi_dma_AWLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWLOCK = grp_transfer_chunk_1_fu_87_m_axi_dma_AWLOCK.read();
    } else {
        dma0_AWLOCK =  (sc_lv<2>) ("XX");
    }
}

void dma_master_driver::thread_dma0_AWPROT() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWPROT = grp_transfer_chunk_fu_95_m_axi_dma_AWPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWPROT = grp_transfer_chunk_1_fu_87_m_axi_dma_AWPROT.read();
    } else {
        dma0_AWPROT =  (sc_lv<3>) ("XXX");
    }
}

void dma_master_driver::thread_dma0_AWQOS() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWQOS = grp_transfer_chunk_fu_95_m_axi_dma_AWQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWQOS = grp_transfer_chunk_1_fu_87_m_axi_dma_AWQOS.read();
    } else {
        dma0_AWQOS =  (sc_lv<4>) ("XXXX");
    }
}

void dma_master_driver::thread_dma0_AWREGION() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWREGION = grp_transfer_chunk_fu_95_m_axi_dma_AWREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWREGION = grp_transfer_chunk_1_fu_87_m_axi_dma_AWREGION.read();
    } else {
        dma0_AWREGION =  (sc_lv<4>) ("XXXX");
    }
}

void dma_master_driver::thread_dma0_AWSIZE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWSIZE = grp_transfer_chunk_fu_95_m_axi_dma_AWSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWSIZE = grp_transfer_chunk_1_fu_87_m_axi_dma_AWSIZE.read();
    } else {
        dma0_AWSIZE =  (sc_lv<3>) ("XXX");
    }
}

void dma_master_driver::thread_dma0_AWUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWUSER = grp_transfer_chunk_fu_95_m_axi_dma_AWUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWUSER = grp_transfer_chunk_1_fu_87_m_axi_dma_AWUSER.read();
    } else {
        dma0_AWUSER =  (sc_lv<1>) ("X");
    }
}

void dma_master_driver::thread_dma0_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_AWVALID = grp_transfer_chunk_fu_95_m_axi_dma_AWVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_AWVALID = grp_transfer_chunk_1_fu_87_m_axi_dma_AWVALID.read();
    } else {
        dma0_AWVALID = ap_const_logic_0;
    }
}

void dma_master_driver::thread_dma0_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_BREADY = grp_transfer_chunk_fu_95_m_axi_dma_BREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_BREADY = grp_transfer_chunk_1_fu_87_m_axi_dma_BREADY.read();
    } else {
        dma0_BREADY = ap_const_logic_0;
    }
}

void dma_master_driver::thread_dma0_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_RREADY = grp_transfer_chunk_fu_95_m_axi_dma_RREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_RREADY = grp_transfer_chunk_1_fu_87_m_axi_dma_RREADY.read();
    } else {
        dma0_RREADY = ap_const_logic_0;
    }
}

void dma_master_driver::thread_dma0_WDATA() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_WDATA = grp_transfer_chunk_fu_95_m_axi_dma_WDATA.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_WDATA = grp_transfer_chunk_1_fu_87_m_axi_dma_WDATA.read();
    } else {
        dma0_WDATA = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dma_master_driver::thread_dma0_WID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_WID = grp_transfer_chunk_fu_95_m_axi_dma_WID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_WID = grp_transfer_chunk_1_fu_87_m_axi_dma_WID.read();
    } else {
        dma0_WID =  (sc_lv<1>) ("X");
    }
}

void dma_master_driver::thread_dma0_WLAST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_WLAST = grp_transfer_chunk_fu_95_m_axi_dma_WLAST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_WLAST = grp_transfer_chunk_1_fu_87_m_axi_dma_WLAST.read();
    } else {
        dma0_WLAST = sc_logic('X');
    }
}

void dma_master_driver::thread_dma0_WSTRB() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_WSTRB = grp_transfer_chunk_fu_95_m_axi_dma_WSTRB.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_WSTRB = grp_transfer_chunk_1_fu_87_m_axi_dma_WSTRB.read();
    } else {
        dma0_WSTRB =  (sc_lv<4>) ("XXXX");
    }
}

void dma_master_driver::thread_dma0_WUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_WUSER = grp_transfer_chunk_fu_95_m_axi_dma_WUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_WUSER = grp_transfer_chunk_1_fu_87_m_axi_dma_WUSER.read();
    } else {
        dma0_WUSER =  (sc_lv<1>) ("X");
    }
}

void dma_master_driver::thread_dma0_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        dma0_WVALID = grp_transfer_chunk_fu_95_m_axi_dma_WVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        dma0_WVALID = grp_transfer_chunk_1_fu_87_m_axi_dma_WVALID.read();
    } else {
        dma0_WVALID = ap_const_logic_0;
    }
}

void dma_master_driver::thread_exitcond_fu_108_p2() {
    exitcond_fu_108_p2 = (!chunk_ctr_reg_76.read().is_01() || !ap_const_lv10_384.is_01())? sc_lv<1>(): sc_lv<1>(chunk_ctr_reg_76.read() == ap_const_lv10_384);
}

void dma_master_driver::thread_frame_trigger_V_read_read_fu_70_p2() {
    frame_trigger_V_read_read_fu_70_p2 = frame_trigger_V.read();
}

void dma_master_driver::thread_grp_fu_141_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_108_p2.read(), ap_const_lv1_0))) {
        grp_fu_141_ap_start = ap_const_logic_1;
    } else {
        grp_fu_141_ap_start = ap_const_logic_0;
    }
}

void dma_master_driver::thread_grp_fu_141_p1() {
    grp_fu_141_p1 =  (sc_lv<12>) (ap_const_lv18_500);
}

void dma_master_driver::thread_grp_transfer_chunk_1_fu_87_ap_start() {
    grp_transfer_chunk_1_fu_87_ap_start = grp_transfer_chunk_1_fu_87_ap_start_reg.read();
}

void dma_master_driver::thread_grp_transfer_chunk_fu_95_ap_start() {
    grp_transfer_chunk_fu_95_ap_start = grp_transfer_chunk_fu_95_ap_start_reg.read();
}

void dma_master_driver::thread_input_row_fu_147_p3() {
    input_row_fu_147_p3 = esl_concat<8,2>(tmp_1_reg_185.read(), ap_const_lv2_0);
}

void dma_master_driver::thread_m_axi_dma1_ARADDR() {
    m_axi_dma1_ARADDR = ap_const_lv32_0;
}

void dma_master_driver::thread_m_axi_dma1_ARBURST() {
    m_axi_dma1_ARBURST = ap_const_lv2_0;
}

void dma_master_driver::thread_m_axi_dma1_ARCACHE() {
    m_axi_dma1_ARCACHE = ap_const_lv4_0;
}

void dma_master_driver::thread_m_axi_dma1_ARID() {
    m_axi_dma1_ARID = ap_const_lv1_0;
}

void dma_master_driver::thread_m_axi_dma1_ARLEN() {
    m_axi_dma1_ARLEN = ap_const_lv8_0;
}

void dma_master_driver::thread_m_axi_dma1_ARLOCK() {
    m_axi_dma1_ARLOCK = ap_const_lv2_0;
}

void dma_master_driver::thread_m_axi_dma1_ARPROT() {
    m_axi_dma1_ARPROT = ap_const_lv3_0;
}

void dma_master_driver::thread_m_axi_dma1_ARQOS() {
    m_axi_dma1_ARQOS = ap_const_lv4_0;
}

void dma_master_driver::thread_m_axi_dma1_ARREGION() {
    m_axi_dma1_ARREGION = ap_const_lv4_0;
}

void dma_master_driver::thread_m_axi_dma1_ARSIZE() {
    m_axi_dma1_ARSIZE = ap_const_lv3_0;
}

void dma_master_driver::thread_m_axi_dma1_ARUSER() {
    m_axi_dma1_ARUSER = ap_const_lv1_0;
}

void dma_master_driver::thread_m_axi_dma1_ARVALID() {
    m_axi_dma1_ARVALID = ap_const_logic_0;
}

void dma_master_driver::thread_m_axi_dma1_AWADDR() {
    m_axi_dma1_AWADDR = ap_const_lv32_0;
}

void dma_master_driver::thread_m_axi_dma1_AWBURST() {
    m_axi_dma1_AWBURST = ap_const_lv2_0;
}

void dma_master_driver::thread_m_axi_dma1_AWCACHE() {
    m_axi_dma1_AWCACHE = ap_const_lv4_0;
}

void dma_master_driver::thread_m_axi_dma1_AWID() {
    m_axi_dma1_AWID = ap_const_lv1_0;
}

void dma_master_driver::thread_m_axi_dma1_AWLEN() {
    m_axi_dma1_AWLEN = ap_const_lv8_0;
}

void dma_master_driver::thread_m_axi_dma1_AWLOCK() {
    m_axi_dma1_AWLOCK = ap_const_lv2_0;
}

void dma_master_driver::thread_m_axi_dma1_AWPROT() {
    m_axi_dma1_AWPROT = ap_const_lv3_0;
}

void dma_master_driver::thread_m_axi_dma1_AWQOS() {
    m_axi_dma1_AWQOS = ap_const_lv4_0;
}

void dma_master_driver::thread_m_axi_dma1_AWREGION() {
    m_axi_dma1_AWREGION = ap_const_lv4_0;
}

void dma_master_driver::thread_m_axi_dma1_AWSIZE() {
    m_axi_dma1_AWSIZE = ap_const_lv3_0;
}

void dma_master_driver::thread_m_axi_dma1_AWUSER() {
    m_axi_dma1_AWUSER = ap_const_lv1_0;
}

void dma_master_driver::thread_m_axi_dma1_AWVALID() {
    m_axi_dma1_AWVALID = ap_const_logic_0;
}

void dma_master_driver::thread_m_axi_dma1_BREADY() {
    m_axi_dma1_BREADY = ap_const_logic_0;
}

void dma_master_driver::thread_m_axi_dma1_RREADY() {
    m_axi_dma1_RREADY = ap_const_logic_0;
}

void dma_master_driver::thread_m_axi_dma1_WDATA() {
    m_axi_dma1_WDATA = ap_const_lv32_0;
}

void dma_master_driver::thread_m_axi_dma1_WID() {
    m_axi_dma1_WID = ap_const_lv1_0;
}

void dma_master_driver::thread_m_axi_dma1_WLAST() {
    m_axi_dma1_WLAST = ap_const_logic_0;
}

void dma_master_driver::thread_m_axi_dma1_WSTRB() {
    m_axi_dma1_WSTRB = ap_const_lv4_0;
}

void dma_master_driver::thread_m_axi_dma1_WUSER() {
    m_axi_dma1_WUSER = ap_const_lv1_0;
}

void dma_master_driver::thread_m_axi_dma1_WVALID() {
    m_axi_dma1_WVALID = ap_const_logic_0;
}

void dma_master_driver::thread_mul_fu_160_p0() {
    mul_fu_160_p0 =  (sc_lv<20>) (ap_const_lv38_66667);
}

void dma_master_driver::thread_mul_fu_160_p1() {
    mul_fu_160_p1 =  (sc_lv<18>) (mul_fu_160_p10.read());
}

void dma_master_driver::thread_mul_fu_160_p10() {
    mul_fu_160_p10 = esl_zext<38,18>(tmp_fu_120_p3.read());
}

void dma_master_driver::thread_tmp_2_fu_155_p1() {
    tmp_2_fu_155_p1 = grp_fu_141_p2.read().range(11-1, 0);
}

void dma_master_driver::thread_tmp_fu_120_p3() {
    tmp_fu_120_p3 = esl_concat<10,8>(chunk_ctr_reg_76.read(), ap_const_lv8_0);
}

void dma_master_driver::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(frame_trigger_V_read_read_fu_70_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_108_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(grp_transfer_chunk_1_fu_87_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(grp_transfer_chunk_fu_95_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void dma_master_driver::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_dma0_AWVALID\" :  \"" << m_axi_dma0_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_AWREADY\" :  \"" << m_axi_dma0_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWADDR\" :  \"" << m_axi_dma0_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWID\" :  \"" << m_axi_dma0_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWLEN\" :  \"" << m_axi_dma0_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWSIZE\" :  \"" << m_axi_dma0_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWBURST\" :  \"" << m_axi_dma0_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWLOCK\" :  \"" << m_axi_dma0_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWCACHE\" :  \"" << m_axi_dma0_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWPROT\" :  \"" << m_axi_dma0_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWQOS\" :  \"" << m_axi_dma0_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWREGION\" :  \"" << m_axi_dma0_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_AWUSER\" :  \"" << m_axi_dma0_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_WVALID\" :  \"" << m_axi_dma0_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_WREADY\" :  \"" << m_axi_dma0_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_WDATA\" :  \"" << m_axi_dma0_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_WSTRB\" :  \"" << m_axi_dma0_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_WLAST\" :  \"" << m_axi_dma0_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_WID\" :  \"" << m_axi_dma0_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_WUSER\" :  \"" << m_axi_dma0_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARVALID\" :  \"" << m_axi_dma0_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_ARREADY\" :  \"" << m_axi_dma0_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARADDR\" :  \"" << m_axi_dma0_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARID\" :  \"" << m_axi_dma0_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARLEN\" :  \"" << m_axi_dma0_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARSIZE\" :  \"" << m_axi_dma0_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARBURST\" :  \"" << m_axi_dma0_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARLOCK\" :  \"" << m_axi_dma0_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARCACHE\" :  \"" << m_axi_dma0_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARPROT\" :  \"" << m_axi_dma0_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARQOS\" :  \"" << m_axi_dma0_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARREGION\" :  \"" << m_axi_dma0_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_ARUSER\" :  \"" << m_axi_dma0_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_RVALID\" :  \"" << m_axi_dma0_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_RREADY\" :  \"" << m_axi_dma0_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_RDATA\" :  \"" << m_axi_dma0_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_RLAST\" :  \"" << m_axi_dma0_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_RID\" :  \"" << m_axi_dma0_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_RUSER\" :  \"" << m_axi_dma0_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_RRESP\" :  \"" << m_axi_dma0_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_BVALID\" :  \"" << m_axi_dma0_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma0_BREADY\" :  \"" << m_axi_dma0_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_BRESP\" :  \"" << m_axi_dma0_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_BID\" :  \"" << m_axi_dma0_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma0_BUSER\" :  \"" << m_axi_dma0_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWVALID\" :  \"" << m_axi_dma1_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_AWREADY\" :  \"" << m_axi_dma1_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWADDR\" :  \"" << m_axi_dma1_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWID\" :  \"" << m_axi_dma1_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWLEN\" :  \"" << m_axi_dma1_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWSIZE\" :  \"" << m_axi_dma1_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWBURST\" :  \"" << m_axi_dma1_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWLOCK\" :  \"" << m_axi_dma1_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWCACHE\" :  \"" << m_axi_dma1_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWPROT\" :  \"" << m_axi_dma1_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWQOS\" :  \"" << m_axi_dma1_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWREGION\" :  \"" << m_axi_dma1_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_AWUSER\" :  \"" << m_axi_dma1_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_WVALID\" :  \"" << m_axi_dma1_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_WREADY\" :  \"" << m_axi_dma1_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_WDATA\" :  \"" << m_axi_dma1_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_WSTRB\" :  \"" << m_axi_dma1_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_WLAST\" :  \"" << m_axi_dma1_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_WID\" :  \"" << m_axi_dma1_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_WUSER\" :  \"" << m_axi_dma1_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARVALID\" :  \"" << m_axi_dma1_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_ARREADY\" :  \"" << m_axi_dma1_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARADDR\" :  \"" << m_axi_dma1_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARID\" :  \"" << m_axi_dma1_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARLEN\" :  \"" << m_axi_dma1_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARSIZE\" :  \"" << m_axi_dma1_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARBURST\" :  \"" << m_axi_dma1_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARLOCK\" :  \"" << m_axi_dma1_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARCACHE\" :  \"" << m_axi_dma1_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARPROT\" :  \"" << m_axi_dma1_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARQOS\" :  \"" << m_axi_dma1_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARREGION\" :  \"" << m_axi_dma1_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_ARUSER\" :  \"" << m_axi_dma1_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_RVALID\" :  \"" << m_axi_dma1_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_RREADY\" :  \"" << m_axi_dma1_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_RDATA\" :  \"" << m_axi_dma1_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_RLAST\" :  \"" << m_axi_dma1_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_RID\" :  \"" << m_axi_dma1_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_RUSER\" :  \"" << m_axi_dma1_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_RRESP\" :  \"" << m_axi_dma1_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_BVALID\" :  \"" << m_axi_dma1_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_dma1_BREADY\" :  \"" << m_axi_dma1_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_BRESP\" :  \"" << m_axi_dma1_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_BID\" :  \"" << m_axi_dma1_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_dma1_BUSER\" :  \"" << m_axi_dma1_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frame_trigger_V\" :  \"" << frame_trigger_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

