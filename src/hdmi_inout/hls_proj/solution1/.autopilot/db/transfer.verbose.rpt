

================================================================
== Vivado HLS Report for 'transfer'
================================================================
* Date:           Wed Mar 29 23:24:15 2023

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        hls_proj
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a200tsbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         8|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|DSP              |        -|      -|       -|       -|
|Expression       |        -|      -|       0|       2|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|     203|
|Register         |        -|      -|      20|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|      20|     205|
+-----------------+---------+-------+--------+--------+
|Available        |      730|    740|  269200|  129000|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|   ~0   |   ~0   |
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +--------------------+----------+-------+---+----+------------+------------+
    |    Variable Name   | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +--------------------+----------+-------+---+----+------------+------------+
    |ap_block_state2_io  |    or    |      0|  0|   2|           1|           1|
    +--------------------+----------+-------+---+----+------------+------------+
    |Total               |          |      0|  0|   2|           1|           1|
    +--------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +----------------------------------+----+-----------+-----+-----------+
    |               Name               | LUT| Input Size| Bits| Total Bits|
    +----------------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                         |  89|         18|    1|         18|
    |ap_sig_ioackin_m_axi_dma_ARREADY  |   9|          2|    1|          2|
    |ap_sig_ioackin_m_axi_dma_AWREADY  |   9|          2|    1|          2|
    |ap_sig_ioackin_m_axi_dma_WREADY   |   9|          2|    1|          2|
    |dma_blk_n_AR                      |   9|          2|    1|          2|
    |dma_blk_n_AW                      |   9|          2|    1|          2|
    |dma_blk_n_B                       |   9|          2|    1|          2|
    |dma_blk_n_R                       |   9|          2|    1|          2|
    |dma_blk_n_W                       |   9|          2|    1|          2|
    |m_axi_dma_AWADDR                  |  21|          4|   32|        128|
    |m_axi_dma_WDATA                   |  21|          4|   32|        128|
    +----------------------------------+----+-----------+-----+-----------+
    |Total                             | 203|         42|   73|        290|
    +----------------------------------+----+-----------+-----+-----------+

    * Register: 
    +----------------------------------+----+----+-----+-----------+
    |               Name               | FF | LUT| Bits| Const Bits|
    +----------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                         |  17|   0|   17|          0|
    |ap_reg_ioackin_m_axi_dma_ARREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_m_axi_dma_AWREADY  |   1|   0|    1|          0|
    |ap_reg_ioackin_m_axi_dma_WREADY   |   1|   0|    1|          0|
    +----------------------------------+----+----+-----+-----------+
    |Total                             |  20|   0|   20|          0|
    +----------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+--------------------+-----+-----+------------+--------------+--------------+
|      RTL Ports     | Dir | Bits|  Protocol  | Source Object|    C Type    |
+--------------------+-----+-----+------------+--------------+--------------+
|ap_clk              |  in |    1| ap_ctrl_hs |   transfer   | return value |
|ap_rst              |  in |    1| ap_ctrl_hs |   transfer   | return value |
|ap_start            |  in |    1| ap_ctrl_hs |   transfer   | return value |
|ap_done             | out |    1| ap_ctrl_hs |   transfer   | return value |
|ap_idle             | out |    1| ap_ctrl_hs |   transfer   | return value |
|ap_ready            | out |    1| ap_ctrl_hs |   transfer   | return value |
|m_axi_dma_AWVALID   | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWREADY   |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWADDR    | out |   32|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWID      | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWLEN     | out |   32|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWSIZE    | out |    3|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWBURST   | out |    2|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWLOCK    | out |    2|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWCACHE   | out |    4|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWPROT    | out |    3|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWQOS     | out |    4|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWREGION  | out |    4|    m_axi   |      dma     |    pointer   |
|m_axi_dma_AWUSER    | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_WVALID    | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_WREADY    |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_WDATA     | out |   32|    m_axi   |      dma     |    pointer   |
|m_axi_dma_WSTRB     | out |    4|    m_axi   |      dma     |    pointer   |
|m_axi_dma_WLAST     | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_WID       | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_WUSER     | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARVALID   | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARREADY   |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARADDR    | out |   32|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARID      | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARLEN     | out |   32|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARSIZE    | out |    3|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARBURST   | out |    2|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARLOCK    | out |    2|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARCACHE   | out |    4|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARPROT    | out |    3|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARQOS     | out |    4|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARREGION  | out |    4|    m_axi   |      dma     |    pointer   |
|m_axi_dma_ARUSER    | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_RVALID    |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_RREADY    | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_RDATA     |  in |   32|    m_axi   |      dma     |    pointer   |
|m_axi_dma_RLAST     |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_RID       |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_RUSER     |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_RRESP     |  in |    2|    m_axi   |      dma     |    pointer   |
|m_axi_dma_BVALID    |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_BREADY    | out |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_BRESP     |  in |    2|    m_axi   |      dma     |    pointer   |
|m_axi_dma_BID       |  in |    1|    m_axi   |      dma     |    pointer   |
|m_axi_dma_BUSER     |  in |    1|    m_axi   |      dma     |    pointer   |
|addr                |  in |   32|   ap_none  |     addr     |    scalar    |
+--------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	10  / (!tmp)

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%dma_addr = getelementptr inbounds i32* %dma, i64 276299794" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 18 'getelementptr' 'dma_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (8.75ns)   --->   "%dma_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %dma_addr, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 19 'writereq' 'dma_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%addr_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %addr) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:37]   --->   Operation 20 'read' 'addr_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %dma_addr, i32 %addr_read, i4 -1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 21 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%dma_addr_1 = getelementptr inbounds i32* %dma, i64 276299788" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 22 'getelementptr' 'dma_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (8.75ns)   --->   "%dma_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %dma_addr_1, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 23 'writereq' 'dma_addr_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 24 [5/5] (8.75ns)   --->   "%dma_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 24 'writeresp' 'dma_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 25 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %dma_addr_1, i32 1, i4 -1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 25 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%dma_addr_2 = getelementptr inbounds i32* %dma, i64 276299798" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 26 'getelementptr' 'dma_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (8.75ns)   --->   "%dma_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %dma_addr_2, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 27 'writereq' 'dma_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 28 [4/5] (8.75ns)   --->   "%dma_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 28 'writeresp' 'dma_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 29 [5/5] (8.75ns)   --->   "%dma_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 29 'writeresp' 'dma_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 30 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %dma_addr_2, i32 768, i4 -1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 30 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 31 [3/5] (8.75ns)   --->   "%dma_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 31 'writeresp' 'dma_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 32 [4/5] (8.75ns)   --->   "%dma_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 32 'writeresp' 'dma_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 33 [5/5] (8.75ns)   --->   "%dma_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_2) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 33 'writeresp' 'dma_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 34 [2/5] (8.75ns)   --->   "%dma_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 34 'writeresp' 'dma_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 35 [3/5] (8.75ns)   --->   "%dma_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 35 'writeresp' 'dma_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 36 [4/5] (8.75ns)   --->   "%dma_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_2) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 36 'writeresp' 'dma_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 37 [1/5] (8.75ns)   --->   "%dma_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:39]   --->   Operation 37 'writeresp' 'dma_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 38 [2/5] (8.75ns)   --->   "%dma_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 38 'writeresp' 'dma_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 39 [3/5] (8.75ns)   --->   "%dma_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_2) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 39 'writeresp' 'dma_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 40 [1/5] (8.75ns)   --->   "%dma_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:41]   --->   Operation 40 'writeresp' 'dma_addr_1_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 41 [2/5] (8.75ns)   --->   "%dma_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_2) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 41 'writeresp' 'dma_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %dma, [6 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1, [1 x i8]* @p_str1, [4 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 43 [1/5] (8.75ns)   --->   "%dma_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %dma_addr_2) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:43]   --->   Operation 43 'writeresp' 'dma_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 44 [1/1] (0.00ns)   --->   "%dma_addr_3 = getelementptr inbounds i32* %dma, i64 276299789" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 44 'getelementptr' 'dma_addr_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 45 [1/1] (0.00ns)   --->   "br label %._crit_edge" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 45 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 46 [7/7] (8.75ns)   --->   "%dma_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %dma_addr_3, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 46 'readreq' 'dma_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 47 [6/7] (8.75ns)   --->   "%dma_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %dma_addr_3, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 47 'readreq' 'dma_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 48 [5/7] (8.75ns)   --->   "%dma_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %dma_addr_3, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 48 'readreq' 'dma_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 49 [4/7] (8.75ns)   --->   "%dma_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %dma_addr_3, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 49 'readreq' 'dma_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 50 [3/7] (8.75ns)   --->   "%dma_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %dma_addr_3, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 50 'readreq' 'dma_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 51 [2/7] (8.75ns)   --->   "%dma_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %dma_addr_3, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 51 'readreq' 'dma_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 52 [1/7] (8.75ns)   --->   "%dma_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %dma_addr_3, i32 1) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 52 'readreq' 'dma_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 53 [1/1] (8.75ns)   --->   "%dma_addr_3_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %dma_addr_3) nounwind" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 53 'read' 'dma_addr_3_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 54 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %dma_addr_3_read, i32 1)" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 54 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %tmp, label %1, label %._crit_edge" [../dma_driver_hls/dma_master_driver_hls.cpp:46]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 56 [1/1] (0.00ns)   --->   "ret void" [../dma_driver_hls/dma_master_driver_hls.cpp:47]   --->   Operation 56 'ret' <Predicate = (tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ dma]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ addr]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
dma_addr        (getelementptr) [ 001111110000000000]
dma_addr_req    (writereq     ) [ 000000000000000000]
addr_read       (read         ) [ 000000000000000000]
StgValue_21     (write        ) [ 000000000000000000]
dma_addr_1      (getelementptr) [ 000111111000000000]
dma_addr_1_req  (writereq     ) [ 000000000000000000]
StgValue_25     (write        ) [ 000000000000000000]
dma_addr_2      (getelementptr) [ 000011111100000000]
dma_addr_2_req  (writereq     ) [ 000000000000000000]
StgValue_30     (write        ) [ 000000000000000000]
dma_addr_resp   (writeresp    ) [ 000000000000000000]
dma_addr_1_resp (writeresp    ) [ 000000000000000000]
StgValue_42     (specinterface) [ 000000000000000000]
dma_addr_2_resp (writeresp    ) [ 000000000000000000]
dma_addr_3      (getelementptr) [ 000000000011111111]
StgValue_45     (br           ) [ 000000000000000000]
dma_load_req    (readreq      ) [ 000000000000000000]
dma_addr_3_read (read         ) [ 000000000000000000]
tmp             (bitselect    ) [ 000000000011111111]
StgValue_55     (br           ) [ 000000000000000000]
StgValue_56     (ret          ) [ 000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="dma">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="dma"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="addr">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="addr"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="44" class="1004" name="grp_writeresp_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="1" slack="0"/>
<pin id="46" dir="0" index="1" bw="32" slack="0"/>
<pin id="47" dir="0" index="2" bw="1" slack="0"/>
<pin id="48" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="dma_addr_req/1 dma_addr_resp/3 "/>
</bind>
</comp>

<comp id="51" class="1004" name="addr_read_read_fu_51">
<pin_list>
<pin id="52" dir="0" index="0" bw="32" slack="0"/>
<pin id="53" dir="0" index="1" bw="32" slack="0"/>
<pin id="54" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="addr_read/2 "/>
</bind>
</comp>

<comp id="57" class="1004" name="StgValue_21_write_fu_57">
<pin_list>
<pin id="58" dir="0" index="0" bw="0" slack="0"/>
<pin id="59" dir="0" index="1" bw="32" slack="1"/>
<pin id="60" dir="0" index="2" bw="32" slack="0"/>
<pin id="61" dir="0" index="3" bw="1" slack="0"/>
<pin id="62" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_21/2 "/>
</bind>
</comp>

<comp id="66" class="1004" name="grp_writeresp_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="1" slack="0"/>
<pin id="68" dir="0" index="1" bw="32" slack="0"/>
<pin id="69" dir="0" index="2" bw="1" slack="0"/>
<pin id="70" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="dma_addr_1_req/2 dma_addr_1_resp/4 "/>
</bind>
</comp>

<comp id="74" class="1004" name="StgValue_25_write_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="0" slack="0"/>
<pin id="76" dir="0" index="1" bw="32" slack="1"/>
<pin id="77" dir="0" index="2" bw="1" slack="0"/>
<pin id="78" dir="0" index="3" bw="1" slack="0"/>
<pin id="79" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_25/3 "/>
</bind>
</comp>

<comp id="83" class="1004" name="grp_writeresp_fu_83">
<pin_list>
<pin id="84" dir="0" index="0" bw="1" slack="0"/>
<pin id="85" dir="0" index="1" bw="32" slack="0"/>
<pin id="86" dir="0" index="2" bw="1" slack="0"/>
<pin id="87" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="dma_addr_2_req/3 dma_addr_2_resp/5 "/>
</bind>
</comp>

<comp id="91" class="1004" name="StgValue_30_write_fu_91">
<pin_list>
<pin id="92" dir="0" index="0" bw="0" slack="0"/>
<pin id="93" dir="0" index="1" bw="32" slack="1"/>
<pin id="94" dir="0" index="2" bw="11" slack="0"/>
<pin id="95" dir="0" index="3" bw="1" slack="0"/>
<pin id="96" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_30/4 "/>
</bind>
</comp>

<comp id="101" class="1004" name="grp_readreq_fu_101">
<pin_list>
<pin id="102" dir="0" index="0" bw="1" slack="0"/>
<pin id="103" dir="0" index="1" bw="32" slack="1"/>
<pin id="104" dir="0" index="2" bw="1" slack="0"/>
<pin id="105" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="dma_load_req/10 "/>
</bind>
</comp>

<comp id="108" class="1004" name="dma_addr_3_read_read_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="32" slack="0"/>
<pin id="110" dir="0" index="1" bw="32" slack="8"/>
<pin id="111" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="dma_addr_3_read/17 "/>
</bind>
</comp>

<comp id="113" class="1004" name="dma_addr_fu_113">
<pin_list>
<pin id="114" dir="0" index="0" bw="32" slack="0"/>
<pin id="115" dir="0" index="1" bw="32" slack="0"/>
<pin id="116" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="dma_addr/1 "/>
</bind>
</comp>

<comp id="120" class="1004" name="dma_addr_1_fu_120">
<pin_list>
<pin id="121" dir="0" index="0" bw="32" slack="0"/>
<pin id="122" dir="0" index="1" bw="32" slack="0"/>
<pin id="123" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="dma_addr_1/2 "/>
</bind>
</comp>

<comp id="127" class="1004" name="dma_addr_2_fu_127">
<pin_list>
<pin id="128" dir="0" index="0" bw="32" slack="0"/>
<pin id="129" dir="0" index="1" bw="32" slack="0"/>
<pin id="130" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="dma_addr_2/3 "/>
</bind>
</comp>

<comp id="134" class="1004" name="dma_addr_3_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="32" slack="0"/>
<pin id="136" dir="0" index="1" bw="32" slack="0"/>
<pin id="137" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="dma_addr_3/9 "/>
</bind>
</comp>

<comp id="140" class="1004" name="tmp_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="1" slack="0"/>
<pin id="142" dir="0" index="1" bw="32" slack="0"/>
<pin id="143" dir="0" index="2" bw="1" slack="0"/>
<pin id="144" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp/17 "/>
</bind>
</comp>

<comp id="148" class="1005" name="dma_addr_reg_148">
<pin_list>
<pin id="149" dir="0" index="0" bw="32" slack="1"/>
<pin id="150" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="dma_addr "/>
</bind>
</comp>

<comp id="154" class="1005" name="dma_addr_1_reg_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="32" slack="1"/>
<pin id="156" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="dma_addr_1 "/>
</bind>
</comp>

<comp id="160" class="1005" name="dma_addr_2_reg_160">
<pin_list>
<pin id="161" dir="0" index="0" bw="32" slack="1"/>
<pin id="162" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="dma_addr_2 "/>
</bind>
</comp>

<comp id="166" class="1005" name="dma_addr_3_reg_166">
<pin_list>
<pin id="167" dir="0" index="0" bw="32" slack="1"/>
<pin id="168" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="dma_addr_3 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="49"><net_src comp="6" pin="0"/><net_sink comp="44" pin=0"/></net>

<net id="50"><net_src comp="8" pin="0"/><net_sink comp="44" pin=2"/></net>

<net id="55"><net_src comp="10" pin="0"/><net_sink comp="51" pin=0"/></net>

<net id="56"><net_src comp="2" pin="0"/><net_sink comp="51" pin=1"/></net>

<net id="63"><net_src comp="12" pin="0"/><net_sink comp="57" pin=0"/></net>

<net id="64"><net_src comp="51" pin="2"/><net_sink comp="57" pin=2"/></net>

<net id="65"><net_src comp="14" pin="0"/><net_sink comp="57" pin=3"/></net>

<net id="71"><net_src comp="6" pin="0"/><net_sink comp="66" pin=0"/></net>

<net id="72"><net_src comp="8" pin="0"/><net_sink comp="66" pin=2"/></net>

<net id="73"><net_src comp="18" pin="0"/><net_sink comp="44" pin=0"/></net>

<net id="80"><net_src comp="12" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="81"><net_src comp="8" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="82"><net_src comp="14" pin="0"/><net_sink comp="74" pin=3"/></net>

<net id="88"><net_src comp="6" pin="0"/><net_sink comp="83" pin=0"/></net>

<net id="89"><net_src comp="8" pin="0"/><net_sink comp="83" pin=2"/></net>

<net id="90"><net_src comp="18" pin="0"/><net_sink comp="66" pin=0"/></net>

<net id="97"><net_src comp="12" pin="0"/><net_sink comp="91" pin=0"/></net>

<net id="98"><net_src comp="22" pin="0"/><net_sink comp="91" pin=2"/></net>

<net id="99"><net_src comp="14" pin="0"/><net_sink comp="91" pin=3"/></net>

<net id="100"><net_src comp="18" pin="0"/><net_sink comp="83" pin=0"/></net>

<net id="106"><net_src comp="38" pin="0"/><net_sink comp="101" pin=0"/></net>

<net id="107"><net_src comp="8" pin="0"/><net_sink comp="101" pin=2"/></net>

<net id="112"><net_src comp="40" pin="0"/><net_sink comp="108" pin=0"/></net>

<net id="117"><net_src comp="0" pin="0"/><net_sink comp="113" pin=0"/></net>

<net id="118"><net_src comp="4" pin="0"/><net_sink comp="113" pin=1"/></net>

<net id="119"><net_src comp="113" pin="2"/><net_sink comp="44" pin=1"/></net>

<net id="124"><net_src comp="0" pin="0"/><net_sink comp="120" pin=0"/></net>

<net id="125"><net_src comp="16" pin="0"/><net_sink comp="120" pin=1"/></net>

<net id="126"><net_src comp="120" pin="2"/><net_sink comp="66" pin=1"/></net>

<net id="131"><net_src comp="0" pin="0"/><net_sink comp="127" pin=0"/></net>

<net id="132"><net_src comp="20" pin="0"/><net_sink comp="127" pin=1"/></net>

<net id="133"><net_src comp="127" pin="2"/><net_sink comp="83" pin=1"/></net>

<net id="138"><net_src comp="0" pin="0"/><net_sink comp="134" pin=0"/></net>

<net id="139"><net_src comp="36" pin="0"/><net_sink comp="134" pin=1"/></net>

<net id="145"><net_src comp="42" pin="0"/><net_sink comp="140" pin=0"/></net>

<net id="146"><net_src comp="108" pin="2"/><net_sink comp="140" pin=1"/></net>

<net id="147"><net_src comp="8" pin="0"/><net_sink comp="140" pin=2"/></net>

<net id="151"><net_src comp="113" pin="2"/><net_sink comp="148" pin=0"/></net>

<net id="152"><net_src comp="148" pin="1"/><net_sink comp="57" pin=1"/></net>

<net id="153"><net_src comp="148" pin="1"/><net_sink comp="44" pin=1"/></net>

<net id="157"><net_src comp="120" pin="2"/><net_sink comp="154" pin=0"/></net>

<net id="158"><net_src comp="154" pin="1"/><net_sink comp="74" pin=1"/></net>

<net id="159"><net_src comp="154" pin="1"/><net_sink comp="66" pin=1"/></net>

<net id="163"><net_src comp="127" pin="2"/><net_sink comp="160" pin=0"/></net>

<net id="164"><net_src comp="160" pin="1"/><net_sink comp="91" pin=1"/></net>

<net id="165"><net_src comp="160" pin="1"/><net_sink comp="83" pin=1"/></net>

<net id="169"><net_src comp="134" pin="2"/><net_sink comp="166" pin=0"/></net>

<net id="170"><net_src comp="166" pin="1"/><net_sink comp="101" pin=1"/></net>

<net id="171"><net_src comp="166" pin="1"/><net_sink comp="108" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: dma | {1 2 3 4 5 6 7 8 9 }
 - Input state : 
	Port: transfer : dma | {10 11 12 13 14 15 16 17 }
	Port: transfer : addr | {2 }
  - Chain level:
	State 1
		dma_addr_req : 1
	State 2
		dma_addr_1_req : 1
	State 3
		dma_addr_2_req : 1
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
		StgValue_55 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-----------------------------|
| Operation|       Functional Unit       |
|----------|-----------------------------|
|          |     grp_writeresp_fu_44     |
| writeresp|     grp_writeresp_fu_66     |
|          |     grp_writeresp_fu_83     |
|----------|-----------------------------|
|   read   |     addr_read_read_fu_51    |
|          | dma_addr_3_read_read_fu_108 |
|----------|-----------------------------|
|          |   StgValue_21_write_fu_57   |
|   write  |   StgValue_25_write_fu_74   |
|          |   StgValue_30_write_fu_91   |
|----------|-----------------------------|
|  readreq |      grp_readreq_fu_101     |
|----------|-----------------------------|
| bitselect|          tmp_fu_140         |
|----------|-----------------------------|
|   Total  |                             |
|----------|-----------------------------|

Memories:
N/A

* Register list:
+------------------+--------+
|                  |   FF   |
+------------------+--------+
|dma_addr_1_reg_154|   32   |
|dma_addr_2_reg_160|   32   |
|dma_addr_3_reg_166|   32   |
| dma_addr_reg_148 |   32   |
+------------------+--------+
|       Total      |   128  |
+------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_44 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_44 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_66 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_66 |  p1  |   2  |  32  |   64   ||    9    |
| grp_writeresp_fu_83 |  p0  |   2  |   1  |    2   |
| grp_writeresp_fu_83 |  p1  |   2  |  32  |   64   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   198  ||  9.984  ||    27   |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    -   |    -   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    9   |    -   |   27   |
|  Register |    -   |   128  |    -   |
+-----------+--------+--------+--------+
|   Total   |    9   |   128  |   27   |
+-----------+--------+--------+--------+
