// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dma_mm2reg,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2936,HLS_SYN_LUT=5084,HLS_VERSION=2018_3}" *)

module dma_mm2reg (
        ap_clk,
        ap_rst_n,
        px_clk_V,
        frame_trigger_V,
        m_axi_in_frame_base_V_AWVALID,
        m_axi_in_frame_base_V_AWREADY,
        m_axi_in_frame_base_V_AWADDR,
        m_axi_in_frame_base_V_AWID,
        m_axi_in_frame_base_V_AWLEN,
        m_axi_in_frame_base_V_AWSIZE,
        m_axi_in_frame_base_V_AWBURST,
        m_axi_in_frame_base_V_AWLOCK,
        m_axi_in_frame_base_V_AWCACHE,
        m_axi_in_frame_base_V_AWPROT,
        m_axi_in_frame_base_V_AWQOS,
        m_axi_in_frame_base_V_AWREGION,
        m_axi_in_frame_base_V_AWUSER,
        m_axi_in_frame_base_V_WVALID,
        m_axi_in_frame_base_V_WREADY,
        m_axi_in_frame_base_V_WDATA,
        m_axi_in_frame_base_V_WSTRB,
        m_axi_in_frame_base_V_WLAST,
        m_axi_in_frame_base_V_WID,
        m_axi_in_frame_base_V_WUSER,
        m_axi_in_frame_base_V_ARVALID,
        m_axi_in_frame_base_V_ARREADY,
        m_axi_in_frame_base_V_ARADDR,
        m_axi_in_frame_base_V_ARID,
        m_axi_in_frame_base_V_ARLEN,
        m_axi_in_frame_base_V_ARSIZE,
        m_axi_in_frame_base_V_ARBURST,
        m_axi_in_frame_base_V_ARLOCK,
        m_axi_in_frame_base_V_ARCACHE,
        m_axi_in_frame_base_V_ARPROT,
        m_axi_in_frame_base_V_ARQOS,
        m_axi_in_frame_base_V_ARREGION,
        m_axi_in_frame_base_V_ARUSER,
        m_axi_in_frame_base_V_RVALID,
        m_axi_in_frame_base_V_RREADY,
        m_axi_in_frame_base_V_RDATA,
        m_axi_in_frame_base_V_RLAST,
        m_axi_in_frame_base_V_RID,
        m_axi_in_frame_base_V_RUSER,
        m_axi_in_frame_base_V_RRESP,
        m_axi_in_frame_base_V_BVALID,
        m_axi_in_frame_base_V_BREADY,
        m_axi_in_frame_base_V_BRESP,
        m_axi_in_frame_base_V_BID,
        m_axi_in_frame_base_V_BUSER,
        m_axi_out_frame_base_V_AWVALID,
        m_axi_out_frame_base_V_AWREADY,
        m_axi_out_frame_base_V_AWADDR,
        m_axi_out_frame_base_V_AWID,
        m_axi_out_frame_base_V_AWLEN,
        m_axi_out_frame_base_V_AWSIZE,
        m_axi_out_frame_base_V_AWBURST,
        m_axi_out_frame_base_V_AWLOCK,
        m_axi_out_frame_base_V_AWCACHE,
        m_axi_out_frame_base_V_AWPROT,
        m_axi_out_frame_base_V_AWQOS,
        m_axi_out_frame_base_V_AWREGION,
        m_axi_out_frame_base_V_AWUSER,
        m_axi_out_frame_base_V_WVALID,
        m_axi_out_frame_base_V_WREADY,
        m_axi_out_frame_base_V_WDATA,
        m_axi_out_frame_base_V_WSTRB,
        m_axi_out_frame_base_V_WLAST,
        m_axi_out_frame_base_V_WID,
        m_axi_out_frame_base_V_WUSER,
        m_axi_out_frame_base_V_ARVALID,
        m_axi_out_frame_base_V_ARREADY,
        m_axi_out_frame_base_V_ARADDR,
        m_axi_out_frame_base_V_ARID,
        m_axi_out_frame_base_V_ARLEN,
        m_axi_out_frame_base_V_ARSIZE,
        m_axi_out_frame_base_V_ARBURST,
        m_axi_out_frame_base_V_ARLOCK,
        m_axi_out_frame_base_V_ARCACHE,
        m_axi_out_frame_base_V_ARPROT,
        m_axi_out_frame_base_V_ARQOS,
        m_axi_out_frame_base_V_ARREGION,
        m_axi_out_frame_base_V_ARUSER,
        m_axi_out_frame_base_V_RVALID,
        m_axi_out_frame_base_V_RREADY,
        m_axi_out_frame_base_V_RDATA,
        m_axi_out_frame_base_V_RLAST,
        m_axi_out_frame_base_V_RID,
        m_axi_out_frame_base_V_RUSER,
        m_axi_out_frame_base_V_RRESP,
        m_axi_out_frame_base_V_BVALID,
        m_axi_out_frame_base_V_BREADY,
        m_axi_out_frame_base_V_BRESP,
        m_axi_out_frame_base_V_BID,
        m_axi_out_frame_base_V_BUSER,
        in_frame0_tile0_0_V,
        in_frame0_tile0_1_V,
        in_frame0_tile0_2_V,
        in_frame0_tile0_3_V,
        in_frame0_tile0_4_V,
        in_frame0_tile0_5_V,
        in_frame0_tile1_0_V,
        in_frame0_tile1_1_V,
        in_frame0_tile1_2_V,
        in_frame0_tile1_3_V,
        in_frame0_tile1_4_V,
        in_frame0_tile1_5_V,
        in_frame1_tile0_0_V,
        in_frame1_tile0_1_V,
        in_frame1_tile0_2_V,
        in_frame1_tile0_3_V,
        in_frame1_tile0_4_V,
        in_frame1_tile0_5_V,
        in_frame1_tile1_0_V,
        in_frame1_tile1_1_V,
        in_frame1_tile1_2_V,
        in_frame1_tile1_3_V,
        in_frame1_tile1_4_V,
        in_frame1_tile1_5_V,
        out_frame0_tile0_0_V,
        out_frame0_tile0_1_V,
        out_frame0_tile0_2_V,
        out_frame0_tile0_3_V,
        out_frame0_tile0_4_V,
        out_frame0_tile0_5_V,
        out_frame0_tile1_0_V,
        out_frame0_tile1_1_V,
        out_frame0_tile1_2_V,
        out_frame0_tile1_3_V,
        out_frame0_tile1_4_V,
        out_frame0_tile1_5_V,
        out_frame1_tile0_0_V,
        out_frame1_tile0_1_V,
        out_frame1_tile0_2_V,
        out_frame1_tile0_3_V,
        out_frame1_tile0_4_V,
        out_frame1_tile0_5_V,
        out_frame1_tile1_0_V,
        out_frame1_tile1_1_V,
        out_frame1_tile1_2_V,
        out_frame1_tile1_3_V,
        out_frame1_tile1_4_V,
        out_frame1_tile1_5_V
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_pp0_stage0 = 25'd2;
parameter    ap_ST_fsm_pp0_stage1 = 25'd4;
parameter    ap_ST_fsm_pp0_stage2 = 25'd8;
parameter    ap_ST_fsm_pp0_stage3 = 25'd16;
parameter    ap_ST_fsm_pp0_stage4 = 25'd32;
parameter    ap_ST_fsm_pp0_stage5 = 25'd64;
parameter    ap_ST_fsm_pp0_stage6 = 25'd128;
parameter    ap_ST_fsm_pp0_stage7 = 25'd256;
parameter    ap_ST_fsm_pp0_stage8 = 25'd512;
parameter    ap_ST_fsm_pp0_stage9 = 25'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 25'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 25'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 25'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 25'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 25'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 25'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 25'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 25'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 25'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 25'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 25'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 25'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 25'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 25'd16777216;
parameter    C_M_AXI_IN_FRAME_BASE_V_ID_WIDTH = 1;
parameter    C_M_AXI_IN_FRAME_BASE_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_IN_FRAME_BASE_V_DATA_WIDTH = 32;
parameter    C_M_AXI_IN_FRAME_BASE_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IN_FRAME_BASE_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IN_FRAME_BASE_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_IN_FRAME_BASE_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_IN_FRAME_BASE_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_IN_FRAME_BASE_V_TARGET_ADDR = 0;
parameter    C_M_AXI_IN_FRAME_BASE_V_USER_VALUE = 0;
parameter    C_M_AXI_IN_FRAME_BASE_V_PROT_VALUE = 0;
parameter    C_M_AXI_IN_FRAME_BASE_V_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_FRAME_BASE_V_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_FRAME_BASE_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUT_FRAME_BASE_V_DATA_WIDTH = 64;
parameter    C_M_AXI_OUT_FRAME_BASE_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_FRAME_BASE_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_FRAME_BASE_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_FRAME_BASE_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_FRAME_BASE_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_FRAME_BASE_V_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_FRAME_BASE_V_USER_VALUE = 0;
parameter    C_M_AXI_OUT_FRAME_BASE_V_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_FRAME_BASE_V_CACHE_VALUE = 3;

parameter C_M_AXI_IN_FRAME_BASE_V_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_FRAME_BASE_V_WSTRB_WIDTH = (64 / 8);

input   ap_clk;
input   ap_rst_n;
input  [0:0] px_clk_V;
input  [0:0] frame_trigger_V;
output   m_axi_in_frame_base_V_AWVALID;
input   m_axi_in_frame_base_V_AWREADY;
output  [C_M_AXI_IN_FRAME_BASE_V_ADDR_WIDTH - 1:0] m_axi_in_frame_base_V_AWADDR;
output  [C_M_AXI_IN_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_in_frame_base_V_AWID;
output  [7:0] m_axi_in_frame_base_V_AWLEN;
output  [2:0] m_axi_in_frame_base_V_AWSIZE;
output  [1:0] m_axi_in_frame_base_V_AWBURST;
output  [1:0] m_axi_in_frame_base_V_AWLOCK;
output  [3:0] m_axi_in_frame_base_V_AWCACHE;
output  [2:0] m_axi_in_frame_base_V_AWPROT;
output  [3:0] m_axi_in_frame_base_V_AWQOS;
output  [3:0] m_axi_in_frame_base_V_AWREGION;
output  [C_M_AXI_IN_FRAME_BASE_V_AWUSER_WIDTH - 1:0] m_axi_in_frame_base_V_AWUSER;
output   m_axi_in_frame_base_V_WVALID;
input   m_axi_in_frame_base_V_WREADY;
output  [C_M_AXI_IN_FRAME_BASE_V_DATA_WIDTH - 1:0] m_axi_in_frame_base_V_WDATA;
output  [C_M_AXI_IN_FRAME_BASE_V_WSTRB_WIDTH - 1:0] m_axi_in_frame_base_V_WSTRB;
output   m_axi_in_frame_base_V_WLAST;
output  [C_M_AXI_IN_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_in_frame_base_V_WID;
output  [C_M_AXI_IN_FRAME_BASE_V_WUSER_WIDTH - 1:0] m_axi_in_frame_base_V_WUSER;
output   m_axi_in_frame_base_V_ARVALID;
input   m_axi_in_frame_base_V_ARREADY;
output  [C_M_AXI_IN_FRAME_BASE_V_ADDR_WIDTH - 1:0] m_axi_in_frame_base_V_ARADDR;
output  [C_M_AXI_IN_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_in_frame_base_V_ARID;
output  [7:0] m_axi_in_frame_base_V_ARLEN;
output  [2:0] m_axi_in_frame_base_V_ARSIZE;
output  [1:0] m_axi_in_frame_base_V_ARBURST;
output  [1:0] m_axi_in_frame_base_V_ARLOCK;
output  [3:0] m_axi_in_frame_base_V_ARCACHE;
output  [2:0] m_axi_in_frame_base_V_ARPROT;
output  [3:0] m_axi_in_frame_base_V_ARQOS;
output  [3:0] m_axi_in_frame_base_V_ARREGION;
output  [C_M_AXI_IN_FRAME_BASE_V_ARUSER_WIDTH - 1:0] m_axi_in_frame_base_V_ARUSER;
input   m_axi_in_frame_base_V_RVALID;
output   m_axi_in_frame_base_V_RREADY;
input  [C_M_AXI_IN_FRAME_BASE_V_DATA_WIDTH - 1:0] m_axi_in_frame_base_V_RDATA;
input   m_axi_in_frame_base_V_RLAST;
input  [C_M_AXI_IN_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_in_frame_base_V_RID;
input  [C_M_AXI_IN_FRAME_BASE_V_RUSER_WIDTH - 1:0] m_axi_in_frame_base_V_RUSER;
input  [1:0] m_axi_in_frame_base_V_RRESP;
input   m_axi_in_frame_base_V_BVALID;
output   m_axi_in_frame_base_V_BREADY;
input  [1:0] m_axi_in_frame_base_V_BRESP;
input  [C_M_AXI_IN_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_in_frame_base_V_BID;
input  [C_M_AXI_IN_FRAME_BASE_V_BUSER_WIDTH - 1:0] m_axi_in_frame_base_V_BUSER;
output   m_axi_out_frame_base_V_AWVALID;
input   m_axi_out_frame_base_V_AWREADY;
output  [C_M_AXI_OUT_FRAME_BASE_V_ADDR_WIDTH - 1:0] m_axi_out_frame_base_V_AWADDR;
output  [C_M_AXI_OUT_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_out_frame_base_V_AWID;
output  [7:0] m_axi_out_frame_base_V_AWLEN;
output  [2:0] m_axi_out_frame_base_V_AWSIZE;
output  [1:0] m_axi_out_frame_base_V_AWBURST;
output  [1:0] m_axi_out_frame_base_V_AWLOCK;
output  [3:0] m_axi_out_frame_base_V_AWCACHE;
output  [2:0] m_axi_out_frame_base_V_AWPROT;
output  [3:0] m_axi_out_frame_base_V_AWQOS;
output  [3:0] m_axi_out_frame_base_V_AWREGION;
output  [C_M_AXI_OUT_FRAME_BASE_V_AWUSER_WIDTH - 1:0] m_axi_out_frame_base_V_AWUSER;
output   m_axi_out_frame_base_V_WVALID;
input   m_axi_out_frame_base_V_WREADY;
output  [C_M_AXI_OUT_FRAME_BASE_V_DATA_WIDTH - 1:0] m_axi_out_frame_base_V_WDATA;
output  [C_M_AXI_OUT_FRAME_BASE_V_WSTRB_WIDTH - 1:0] m_axi_out_frame_base_V_WSTRB;
output   m_axi_out_frame_base_V_WLAST;
output  [C_M_AXI_OUT_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_out_frame_base_V_WID;
output  [C_M_AXI_OUT_FRAME_BASE_V_WUSER_WIDTH - 1:0] m_axi_out_frame_base_V_WUSER;
output   m_axi_out_frame_base_V_ARVALID;
input   m_axi_out_frame_base_V_ARREADY;
output  [C_M_AXI_OUT_FRAME_BASE_V_ADDR_WIDTH - 1:0] m_axi_out_frame_base_V_ARADDR;
output  [C_M_AXI_OUT_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_out_frame_base_V_ARID;
output  [7:0] m_axi_out_frame_base_V_ARLEN;
output  [2:0] m_axi_out_frame_base_V_ARSIZE;
output  [1:0] m_axi_out_frame_base_V_ARBURST;
output  [1:0] m_axi_out_frame_base_V_ARLOCK;
output  [3:0] m_axi_out_frame_base_V_ARCACHE;
output  [2:0] m_axi_out_frame_base_V_ARPROT;
output  [3:0] m_axi_out_frame_base_V_ARQOS;
output  [3:0] m_axi_out_frame_base_V_ARREGION;
output  [C_M_AXI_OUT_FRAME_BASE_V_ARUSER_WIDTH - 1:0] m_axi_out_frame_base_V_ARUSER;
input   m_axi_out_frame_base_V_RVALID;
output   m_axi_out_frame_base_V_RREADY;
input  [C_M_AXI_OUT_FRAME_BASE_V_DATA_WIDTH - 1:0] m_axi_out_frame_base_V_RDATA;
input   m_axi_out_frame_base_V_RLAST;
input  [C_M_AXI_OUT_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_out_frame_base_V_RID;
input  [C_M_AXI_OUT_FRAME_BASE_V_RUSER_WIDTH - 1:0] m_axi_out_frame_base_V_RUSER;
input  [1:0] m_axi_out_frame_base_V_RRESP;
input   m_axi_out_frame_base_V_BVALID;
output   m_axi_out_frame_base_V_BREADY;
input  [1:0] m_axi_out_frame_base_V_BRESP;
input  [C_M_AXI_OUT_FRAME_BASE_V_ID_WIDTH - 1:0] m_axi_out_frame_base_V_BID;
input  [C_M_AXI_OUT_FRAME_BASE_V_BUSER_WIDTH - 1:0] m_axi_out_frame_base_V_BUSER;
output  [15:0] in_frame0_tile0_0_V;
output  [15:0] in_frame0_tile0_1_V;
output  [15:0] in_frame0_tile0_2_V;
output  [15:0] in_frame0_tile0_3_V;
output  [15:0] in_frame0_tile0_4_V;
output  [15:0] in_frame0_tile0_5_V;
output  [15:0] in_frame0_tile1_0_V;
output  [15:0] in_frame0_tile1_1_V;
output  [15:0] in_frame0_tile1_2_V;
output  [15:0] in_frame0_tile1_3_V;
output  [15:0] in_frame0_tile1_4_V;
output  [15:0] in_frame0_tile1_5_V;
output  [15:0] in_frame1_tile0_0_V;
output  [15:0] in_frame1_tile0_1_V;
output  [15:0] in_frame1_tile0_2_V;
output  [15:0] in_frame1_tile0_3_V;
output  [15:0] in_frame1_tile0_4_V;
output  [15:0] in_frame1_tile0_5_V;
output  [15:0] in_frame1_tile1_0_V;
output  [15:0] in_frame1_tile1_1_V;
output  [15:0] in_frame1_tile1_2_V;
output  [15:0] in_frame1_tile1_3_V;
output  [15:0] in_frame1_tile1_4_V;
output  [15:0] in_frame1_tile1_5_V;
input  [15:0] out_frame0_tile0_0_V;
input  [15:0] out_frame0_tile0_1_V;
input  [15:0] out_frame0_tile0_2_V;
input  [15:0] out_frame0_tile0_3_V;
input  [15:0] out_frame0_tile0_4_V;
input  [15:0] out_frame0_tile0_5_V;
input  [15:0] out_frame0_tile1_0_V;
input  [15:0] out_frame0_tile1_1_V;
input  [15:0] out_frame0_tile1_2_V;
input  [15:0] out_frame0_tile1_3_V;
input  [15:0] out_frame0_tile1_4_V;
input  [15:0] out_frame0_tile1_5_V;
input  [15:0] out_frame1_tile0_0_V;
input  [15:0] out_frame1_tile0_1_V;
input  [15:0] out_frame1_tile0_2_V;
input  [15:0] out_frame1_tile0_3_V;
input  [15:0] out_frame1_tile0_4_V;
input  [15:0] out_frame1_tile0_5_V;
input  [15:0] out_frame1_tile1_0_V;
input  [15:0] out_frame1_tile1_1_V;
input  [15:0] out_frame1_tile1_2_V;
input  [15:0] out_frame1_tile1_3_V;
input  [15:0] out_frame1_tile1_4_V;
input  [15:0] out_frame1_tile1_5_V;

 reg    ap_rst_n_inv;
reg    in_frame_base_V_blk_n_AR;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg    in_frame_base_V_blk_n_R;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
reg    out_frame_base_V_blk_n_AW;
reg    out_frame_base_V_blk_n_W;
reg    out_frame_base_V_blk_n_B;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    in_frame_base_V_AWREADY;
wire    in_frame_base_V_WREADY;
reg    in_frame_base_V_ARVALID;
wire    in_frame_base_V_ARREADY;
reg   [31:0] in_frame_base_V_ARADDR;
wire    in_frame_base_V_RVALID;
reg    in_frame_base_V_RREADY;
wire   [15:0] in_frame_base_V_RDATA;
wire    in_frame_base_V_RLAST;
wire   [0:0] in_frame_base_V_RID;
wire   [0:0] in_frame_base_V_RUSER;
wire   [1:0] in_frame_base_V_RRESP;
wire    in_frame_base_V_BVALID;
wire   [1:0] in_frame_base_V_BRESP;
wire   [0:0] in_frame_base_V_BID;
wire   [0:0] in_frame_base_V_BUSER;
reg    out_frame_base_V_AWVALID;
wire    out_frame_base_V_AWREADY;
reg   [31:0] out_frame_base_V_AWADDR;
reg    out_frame_base_V_WVALID;
wire    out_frame_base_V_WREADY;
reg   [63:0] out_frame_base_V_WDATA;
wire    out_frame_base_V_ARREADY;
wire    out_frame_base_V_RVALID;
wire   [63:0] out_frame_base_V_RDATA;
wire    out_frame_base_V_RLAST;
wire   [0:0] out_frame_base_V_RID;
wire   [0:0] out_frame_base_V_RUSER;
wire   [1:0] out_frame_base_V_RRESP;
wire    out_frame_base_V_BVALID;
reg    out_frame_base_V_BREADY;
wire   [1:0] out_frame_base_V_BRESP;
wire   [0:0] out_frame_base_V_BID;
wire   [0:0] out_frame_base_V_BUSER;
reg   [31:0] out_row_1_reg_1064;
reg   [31:0] out_row_reg_1076;
reg   [31:0] out_col_1_reg_1087;
reg   [31:0] out_col_reg_1098;
reg   [31:0] out_row_2_reg_1109;
reg   [31:0] out_col_2_reg_1121;
reg   [31:0] in_row_4_reg_1134;
reg   [31:0] in_col_2_reg_1146;
wire   [31:0] tmp_fu_1171_p2;
reg   [31:0] tmp_reg_2155;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state26_pp0_stage0_iter1;
reg    ap_sig_ioackin_out_frame_base_V_WREADY;
reg    ap_sig_ioackin_out_frame_base_V_AWREADY;
reg    ap_block_state26_io;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] tmp_1_fu_1183_p2;
reg   [31:0] tmp_1_reg_2176;
reg   [31:0] in_frame_base_V_addr_reg_2197;
wire   [31:0] tmp_14_fu_1223_p2;
reg   [31:0] tmp_14_reg_2203;
wire   [31:0] tmp_15_fu_1235_p2;
reg   [31:0] tmp_15_reg_2218;
wire   [31:0] tmp_16_fu_1247_p2;
reg   [31:0] tmp_16_reg_2233;
wire   [0:0] tmp_40_fu_1253_p2;
reg   [0:0] tmp_40_reg_2238;
wire   [31:0] in_col_fu_1259_p2;
reg   [31:0] in_frame_base_V_addr_1_reg_2247;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_sig_ioackin_in_frame_base_V_ARREADY;
reg    ap_block_state3_io;
reg    ap_block_state27_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire   [31:0] tmp_18_fu_1300_p2;
reg   [31:0] tmp_18_reg_2259;
reg   [31:0] in_frame_base_V_addr_2_reg_2264;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state4_io;
reg    ap_block_state28_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_20_fu_1345_p2;
reg   [31:0] tmp_20_reg_2276;
reg   [31:0] in_frame_base_V_addr_3_reg_2281;
wire    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_state5_io;
reg    ap_block_state29_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
wire   [31:0] tmp_22_fu_1390_p2;
reg   [31:0] tmp_22_reg_2293;
reg   [31:0] in_frame_base_V_addr_4_reg_2298;
wire    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_state6_io;
reg    ap_block_state30_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire   [31:0] tmp_24_fu_1435_p2;
reg   [31:0] tmp_24_reg_2310;
reg   [31:0] in_frame_base_V_addr_5_reg_2315;
wire    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state7_io;
reg    ap_block_state31_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
wire   [31:0] tmp_26_fu_1480_p2;
reg   [31:0] tmp_26_reg_2327;
wire   [31:0] in_row_1_fu_1497_p3;
wire    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_state8_io;
reg    ap_block_state32_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
wire   [31:0] tmp_28_fu_1525_p2;
reg   [31:0] tmp_28_reg_2343;
wire   [31:0] tmp_42_fu_1542_p2;
reg   [31:0] tmp_42_reg_2348;
wire   [31:0] tmp_43_fu_1554_p2;
reg   [31:0] tmp_43_reg_2357;
reg   [31:0] in_frame_base_V_addr_6_reg_2366;
wire   [0:0] tmp_80_fu_1582_p2;
reg   [0:0] tmp_80_reg_2372;
wire   [31:0] in_col_1_fu_1588_p2;
wire   [0:0] tmp_81_fu_1594_p2;
reg   [0:0] tmp_81_reg_2381;
wire   [31:0] in_row_2_fu_1600_p2;
reg   [31:0] in_row_2_reg_2386;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage7_11001;
wire   [31:0] tmp_30_fu_1626_p2;
reg   [31:0] tmp_30_reg_2397;
reg   [31:0] in_frame_base_V_addr_7_reg_2402;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage8_11001;
wire   [31:0] tmp_32_fu_1671_p2;
reg   [31:0] tmp_32_reg_2414;
reg   [31:0] in_frame_base_V_addr_8_reg_2419;
reg   [31:0] in_frame_base_V_addr_9_reg_2425;
reg   [31:0] in_frame_base_V_addr_10_reg_2431;
reg   [31:0] in_frame_base_V_addr_11_reg_2437;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage9_11001;
wire   [31:0] tmp_34_fu_1776_p2;
reg   [31:0] tmp_34_reg_2449;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage10_11001;
wire   [31:0] tmp_36_fu_1801_p2;
reg   [31:0] tmp_36_reg_2460;
wire   [31:0] tmp_38_fu_1811_p2;
reg   [31:0] tmp_38_reg_2465;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage12_11001;
wire   [31:0] tmp_56_fu_1851_p2;
reg   [31:0] tmp_56_reg_2482;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage13_11001;
wire   [31:0] tmp_58_fu_1876_p2;
reg   [31:0] tmp_58_reg_2493;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage14_11001;
wire   [31:0] tmp_60_fu_1901_p2;
reg   [31:0] tmp_60_reg_2504;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage15_11001;
wire   [31:0] tmp_62_fu_1926_p2;
reg   [31:0] tmp_62_reg_2515;
reg    ap_block_state18_pp0_stage16_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage16_11001;
wire   [31:0] tmp_64_fu_1951_p2;
reg   [31:0] tmp_64_reg_2526;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_block_state19_io;
reg    ap_block_pp0_stage17_11001;
wire   [31:0] tmp_66_fu_1976_p2;
reg   [31:0] tmp_66_reg_2537;
reg    ap_block_state20_pp0_stage18_iter0;
reg    ap_block_state20_io;
reg    ap_block_pp0_stage18_11001;
wire   [31:0] tmp_68_fu_2001_p2;
reg   [31:0] tmp_68_reg_2548;
reg    ap_block_state21_pp0_stage19_iter0;
reg    ap_block_state21_io;
reg    ap_block_pp0_stage19_11001;
wire   [31:0] tmp_70_fu_2026_p2;
reg   [31:0] tmp_70_reg_2559;
reg    ap_block_state22_pp0_stage20_iter0;
reg    ap_block_state22_io;
reg    ap_block_pp0_stage20_11001;
wire   [31:0] tmp_72_fu_2051_p2;
reg   [31:0] tmp_72_reg_2570;
reg    ap_block_state23_pp0_stage21_iter0;
reg    ap_block_state23_io;
reg    ap_block_pp0_stage21_11001;
wire   [31:0] tmp_74_fu_2076_p2;
reg   [31:0] tmp_74_reg_2581;
reg    ap_block_state24_pp0_stage22_iter0;
reg    ap_block_state24_io;
reg    ap_block_pp0_stage22_11001;
wire   [31:0] tmp_76_fu_2101_p2;
reg   [31:0] tmp_76_reg_2592;
wire   [31:0] tmp_78_fu_2111_p2;
reg   [31:0] tmp_78_reg_2597;
wire   [31:0] in_row_3_fu_2116_p3;
reg   [15:0] out_frame1_tile0_4_s_reg_2607;
reg    ap_block_state25_pp0_stage23_iter0;
reg    ap_block_state25_io;
reg    ap_block_pp0_stage23_11001;
reg   [15:0] out_frame1_tile0_5_s_reg_2618;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage23_subdone;
reg   [31:0] ap_phi_mux_out_row_1_phi_fu_1068_p4;
reg   [31:0] ap_phi_mux_out_row_phi_fu_1080_p4;
reg   [31:0] ap_phi_mux_out_col_1_phi_fu_1091_p4;
reg   [31:0] ap_phi_mux_out_col_phi_fu_1102_p4;
reg   [31:0] ap_phi_reg_pp0_iter0_out_row_2_reg_1109;
reg   [31:0] ap_phi_reg_pp0_iter0_out_col_2_reg_1121;
reg   [31:0] ap_phi_reg_pp0_iter0_in_row_4_reg_1134;
reg   [31:0] ap_phi_reg_pp0_iter0_in_col_2_reg_1146;
wire   [63:0] tmp_4_fu_1201_p1;
wire   [63:0] tmp_7_fu_1275_p1;
wire   [63:0] tmp_17_fu_1285_p1;
wire   [63:0] tmp_s_fu_1315_p1;
wire   [63:0] tmp_19_fu_1330_p1;
wire   [63:0] tmp_8_fu_1360_p1;
wire   [63:0] tmp_21_fu_1375_p1;
wire   [63:0] tmp_11_fu_1405_p1;
wire   [63:0] tmp_23_fu_1420_p1;
wire   [63:0] tmp_13_fu_1450_p1;
wire   [63:0] tmp_25_fu_1465_p1;
wire   [63:0] tmp_27_fu_1510_p1;
wire   [63:0] tmp_45_fu_1572_p1;
wire   [63:0] tmp_29_fu_1611_p1;
wire   [63:0] tmp_47_fu_1641_p1;
wire   [63:0] tmp_31_fu_1656_p1;
wire   [63:0] tmp_49_fu_1686_p1;
wire   [63:0] tmp_51_fu_1706_p1;
wire   [63:0] tmp_53_fu_1726_p1;
wire   [63:0] tmp_55_fu_1746_p1;
wire   [63:0] tmp_33_fu_1761_p1;
wire   [63:0] tmp_35_fu_1786_p1;
wire   [63:0] tmp_37_fu_1821_p1;
wire   [63:0] tmp_39_fu_1836_p1;
wire   [63:0] tmp_57_fu_1861_p1;
wire   [63:0] tmp_59_fu_1886_p1;
wire   [63:0] tmp_61_fu_1911_p1;
wire   [63:0] tmp_63_fu_1936_p1;
wire   [63:0] tmp_65_fu_1961_p1;
wire   [63:0] tmp_67_fu_1986_p1;
wire   [63:0] tmp_69_fu_2011_p1;
wire   [63:0] tmp_71_fu_2036_p1;
wire   [63:0] tmp_73_fu_2061_p1;
wire   [63:0] tmp_75_fu_2086_p1;
wire   [63:0] tmp_77_fu_2127_p1;
wire   [63:0] tmp_79_fu_2141_p1;
reg    ap_reg_ioackin_in_frame_base_V_ARREADY;
reg    ap_block_pp0_stage1_01001;
reg    ap_reg_ioackin_out_frame_base_V_AWREADY;
reg    ap_block_pp0_stage2_01001;
reg    ap_reg_ioackin_out_frame_base_V_WREADY;
wire   [63:0] p_s_fu_1325_p1;
reg    ap_block_pp0_stage3_01001;
wire   [63:0] p_1_fu_1370_p1;
reg    ap_block_pp0_stage4_01001;
wire   [63:0] p_2_fu_1415_p1;
reg    ap_block_pp0_stage5_01001;
wire   [63:0] p_3_fu_1460_p1;
reg    ap_block_pp0_stage6_01001;
wire   [63:0] p_4_fu_1505_p1;
reg    ap_block_pp0_stage7_01001;
wire   [63:0] p_5_fu_1606_p1;
reg    ap_block_pp0_stage8_01001;
wire   [63:0] p_6_fu_1651_p1;
reg    ap_block_pp0_stage9_01001;
wire   [63:0] p_7_fu_1756_p1;
reg    ap_block_pp0_stage10_01001;
wire   [63:0] p_8_fu_1781_p1;
reg    ap_block_pp0_stage11_01001;
wire   [63:0] p_9_fu_1816_p1;
reg    ap_block_pp0_stage12_01001;
wire   [63:0] p_10_fu_1831_p1;
reg    ap_block_pp0_stage13_01001;
wire   [63:0] p_11_fu_1856_p1;
reg    ap_block_pp0_stage14_01001;
wire   [63:0] p_12_fu_1881_p1;
reg    ap_block_pp0_stage15_01001;
wire   [63:0] p_13_fu_1906_p1;
reg    ap_block_pp0_stage16_01001;
wire   [63:0] p_14_fu_1931_p1;
reg    ap_block_pp0_stage17_01001;
wire   [63:0] p_15_fu_1956_p1;
reg    ap_block_pp0_stage18_01001;
wire   [63:0] p_16_fu_1981_p1;
reg    ap_block_pp0_stage19_01001;
wire   [63:0] p_17_fu_2006_p1;
reg    ap_block_pp0_stage20_01001;
wire   [63:0] p_18_fu_2031_p1;
reg    ap_block_pp0_stage21_01001;
wire   [63:0] p_19_fu_2056_p1;
reg    ap_block_pp0_stage22_01001;
wire   [63:0] p_20_fu_2081_p1;
reg    ap_block_pp0_stage23_01001;
wire   [63:0] p_21_fu_2122_p1;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] p_22_fu_2137_p1;
wire   [63:0] p_23_fu_2151_p1;
wire   [31:0] tmp_82_fu_1159_p2;
wire   [31:0] tmp_83_fu_1165_p2;
wire   [31:0] tmp_84_fu_1177_p2;
wire   [31:0] tmp1_fu_1189_p2;
wire   [31:0] tmp_3_fu_1195_p2;
wire   [31:0] tmp_85_fu_1211_p2;
wire   [31:0] tmp_86_fu_1217_p2;
wire   [31:0] tmp_87_fu_1229_p2;
wire   [31:0] tmp7_fu_1241_p2;
wire   [31:0] tmp2_fu_1265_p2;
wire   [31:0] tmp_6_fu_1270_p2;
wire   [31:0] tmp8_fu_1295_p2;
wire   [31:0] tmp3_fu_1305_p2;
wire   [31:0] tmp_9_fu_1310_p2;
wire   [31:0] tmp9_fu_1340_p2;
wire   [31:0] tmp4_fu_1350_p2;
wire   [31:0] tmp_5_fu_1355_p2;
wire   [31:0] tmp10_fu_1385_p2;
wire   [31:0] tmp5_fu_1395_p2;
wire   [31:0] tmp_10_fu_1400_p2;
wire   [31:0] tmp11_fu_1430_p2;
wire   [31:0] tmp6_fu_1440_p2;
wire   [31:0] tmp_12_fu_1445_p2;
wire   [31:0] tmp12_fu_1475_p2;
wire   [0:0] tmp_41_fu_1485_p2;
wire   [31:0] in_row_fu_1491_p2;
wire   [31:0] tmp13_fu_1520_p2;
wire   [31:0] tmp_88_fu_1530_p2;
wire   [31:0] tmp_89_fu_1536_p2;
wire   [31:0] tmp_90_fu_1548_p2;
wire   [31:0] tmp19_fu_1560_p2;
wire   [31:0] tmp_44_fu_1566_p2;
wire   [31:0] tmp14_fu_1621_p2;
wire   [31:0] tmp20_fu_1631_p2;
wire   [31:0] tmp_46_fu_1636_p2;
wire   [31:0] tmp15_fu_1666_p2;
wire   [31:0] tmp21_fu_1676_p2;
wire   [31:0] tmp_48_fu_1681_p2;
wire   [31:0] tmp22_fu_1696_p2;
wire   [31:0] tmp_50_fu_1701_p2;
wire   [31:0] tmp23_fu_1716_p2;
wire   [31:0] tmp_52_fu_1721_p2;
wire   [31:0] tmp24_fu_1736_p2;
wire   [31:0] tmp_54_fu_1741_p2;
wire   [31:0] tmp16_fu_1771_p2;
wire   [31:0] tmp17_fu_1796_p2;
wire   [31:0] tmp18_fu_1806_p2;
wire   [31:0] tmp25_fu_1846_p2;
wire   [31:0] tmp26_fu_1871_p2;
wire   [31:0] tmp27_fu_1896_p2;
wire   [31:0] tmp28_fu_1921_p2;
wire   [31:0] tmp29_fu_1946_p2;
wire   [31:0] tmp30_fu_1971_p2;
wire   [31:0] tmp31_fu_1996_p2;
wire   [31:0] tmp32_fu_2021_p2;
wire   [31:0] tmp33_fu_2046_p2;
wire   [31:0] tmp34_fu_2071_p2;
wire   [31:0] tmp35_fu_2096_p2;
wire   [31:0] tmp36_fu_2106_p2;
reg   [24:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1080;
reg    ap_condition_848;
reg    ap_condition_822;
reg    ap_condition_729;
reg    ap_condition_1172;
reg    ap_condition_1191;
reg    ap_condition_1215;
reg    ap_condition_1237;
reg    ap_condition_1259;
reg    ap_condition_1280;
reg    ap_condition_1302;
reg    ap_condition_1325;
reg    ap_condition_1348;
reg    ap_condition_1371;
reg    ap_condition_1394;
reg    ap_condition_1417;
reg    ap_condition_1440;
reg    ap_condition_1459;
reg    ap_condition_1478;
reg    ap_condition_1497;
reg    ap_condition_1515;
reg    ap_condition_1533;
reg    ap_condition_1551;
reg    ap_condition_1568;
reg    ap_condition_1585;
reg    ap_condition_1602;
reg    ap_condition_1619;
reg    ap_condition_1636;
reg    ap_condition_1650;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_ioackin_in_frame_base_V_ARREADY = 1'b0;
#0 ap_reg_ioackin_out_frame_base_V_AWREADY = 1'b0;
#0 ap_reg_ioackin_out_frame_base_V_WREADY = 1'b0;
end

dma_mm2reg_in_frame_base_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IN_FRAME_BASE_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IN_FRAME_BASE_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IN_FRAME_BASE_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IN_FRAME_BASE_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IN_FRAME_BASE_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IN_FRAME_BASE_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IN_FRAME_BASE_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IN_FRAME_BASE_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_IN_FRAME_BASE_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_IN_FRAME_BASE_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IN_FRAME_BASE_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IN_FRAME_BASE_V_CACHE_VALUE ))
dma_mm2reg_in_frame_base_V_m_axi_U(
    .AWVALID(m_axi_in_frame_base_V_AWVALID),
    .AWREADY(m_axi_in_frame_base_V_AWREADY),
    .AWADDR(m_axi_in_frame_base_V_AWADDR),
    .AWID(m_axi_in_frame_base_V_AWID),
    .AWLEN(m_axi_in_frame_base_V_AWLEN),
    .AWSIZE(m_axi_in_frame_base_V_AWSIZE),
    .AWBURST(m_axi_in_frame_base_V_AWBURST),
    .AWLOCK(m_axi_in_frame_base_V_AWLOCK),
    .AWCACHE(m_axi_in_frame_base_V_AWCACHE),
    .AWPROT(m_axi_in_frame_base_V_AWPROT),
    .AWQOS(m_axi_in_frame_base_V_AWQOS),
    .AWREGION(m_axi_in_frame_base_V_AWREGION),
    .AWUSER(m_axi_in_frame_base_V_AWUSER),
    .WVALID(m_axi_in_frame_base_V_WVALID),
    .WREADY(m_axi_in_frame_base_V_WREADY),
    .WDATA(m_axi_in_frame_base_V_WDATA),
    .WSTRB(m_axi_in_frame_base_V_WSTRB),
    .WLAST(m_axi_in_frame_base_V_WLAST),
    .WID(m_axi_in_frame_base_V_WID),
    .WUSER(m_axi_in_frame_base_V_WUSER),
    .ARVALID(m_axi_in_frame_base_V_ARVALID),
    .ARREADY(m_axi_in_frame_base_V_ARREADY),
    .ARADDR(m_axi_in_frame_base_V_ARADDR),
    .ARID(m_axi_in_frame_base_V_ARID),
    .ARLEN(m_axi_in_frame_base_V_ARLEN),
    .ARSIZE(m_axi_in_frame_base_V_ARSIZE),
    .ARBURST(m_axi_in_frame_base_V_ARBURST),
    .ARLOCK(m_axi_in_frame_base_V_ARLOCK),
    .ARCACHE(m_axi_in_frame_base_V_ARCACHE),
    .ARPROT(m_axi_in_frame_base_V_ARPROT),
    .ARQOS(m_axi_in_frame_base_V_ARQOS),
    .ARREGION(m_axi_in_frame_base_V_ARREGION),
    .ARUSER(m_axi_in_frame_base_V_ARUSER),
    .RVALID(m_axi_in_frame_base_V_RVALID),
    .RREADY(m_axi_in_frame_base_V_RREADY),
    .RDATA(m_axi_in_frame_base_V_RDATA),
    .RLAST(m_axi_in_frame_base_V_RLAST),
    .RID(m_axi_in_frame_base_V_RID),
    .RUSER(m_axi_in_frame_base_V_RUSER),
    .RRESP(m_axi_in_frame_base_V_RRESP),
    .BVALID(m_axi_in_frame_base_V_BVALID),
    .BREADY(m_axi_in_frame_base_V_BREADY),
    .BRESP(m_axi_in_frame_base_V_BRESP),
    .BID(m_axi_in_frame_base_V_BID),
    .BUSER(m_axi_in_frame_base_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(in_frame_base_V_ARVALID),
    .I_ARREADY(in_frame_base_V_ARREADY),
    .I_ARADDR(in_frame_base_V_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(in_frame_base_V_RVALID),
    .I_RREADY(in_frame_base_V_RREADY),
    .I_RDATA(in_frame_base_V_RDATA),
    .I_RID(in_frame_base_V_RID),
    .I_RUSER(in_frame_base_V_RUSER),
    .I_RRESP(in_frame_base_V_RRESP),
    .I_RLAST(in_frame_base_V_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(in_frame_base_V_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(in_frame_base_V_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(in_frame_base_V_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(in_frame_base_V_BRESP),
    .I_BID(in_frame_base_V_BID),
    .I_BUSER(in_frame_base_V_BUSER)
);

dma_mm2reg_out_frame_base_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_FRAME_BASE_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_FRAME_BASE_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_FRAME_BASE_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_FRAME_BASE_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_FRAME_BASE_V_CACHE_VALUE ))
dma_mm2reg_out_frame_base_V_m_axi_U(
    .AWVALID(m_axi_out_frame_base_V_AWVALID),
    .AWREADY(m_axi_out_frame_base_V_AWREADY),
    .AWADDR(m_axi_out_frame_base_V_AWADDR),
    .AWID(m_axi_out_frame_base_V_AWID),
    .AWLEN(m_axi_out_frame_base_V_AWLEN),
    .AWSIZE(m_axi_out_frame_base_V_AWSIZE),
    .AWBURST(m_axi_out_frame_base_V_AWBURST),
    .AWLOCK(m_axi_out_frame_base_V_AWLOCK),
    .AWCACHE(m_axi_out_frame_base_V_AWCACHE),
    .AWPROT(m_axi_out_frame_base_V_AWPROT),
    .AWQOS(m_axi_out_frame_base_V_AWQOS),
    .AWREGION(m_axi_out_frame_base_V_AWREGION),
    .AWUSER(m_axi_out_frame_base_V_AWUSER),
    .WVALID(m_axi_out_frame_base_V_WVALID),
    .WREADY(m_axi_out_frame_base_V_WREADY),
    .WDATA(m_axi_out_frame_base_V_WDATA),
    .WSTRB(m_axi_out_frame_base_V_WSTRB),
    .WLAST(m_axi_out_frame_base_V_WLAST),
    .WID(m_axi_out_frame_base_V_WID),
    .WUSER(m_axi_out_frame_base_V_WUSER),
    .ARVALID(m_axi_out_frame_base_V_ARVALID),
    .ARREADY(m_axi_out_frame_base_V_ARREADY),
    .ARADDR(m_axi_out_frame_base_V_ARADDR),
    .ARID(m_axi_out_frame_base_V_ARID),
    .ARLEN(m_axi_out_frame_base_V_ARLEN),
    .ARSIZE(m_axi_out_frame_base_V_ARSIZE),
    .ARBURST(m_axi_out_frame_base_V_ARBURST),
    .ARLOCK(m_axi_out_frame_base_V_ARLOCK),
    .ARCACHE(m_axi_out_frame_base_V_ARCACHE),
    .ARPROT(m_axi_out_frame_base_V_ARPROT),
    .ARQOS(m_axi_out_frame_base_V_ARQOS),
    .ARREGION(m_axi_out_frame_base_V_ARREGION),
    .ARUSER(m_axi_out_frame_base_V_ARUSER),
    .RVALID(m_axi_out_frame_base_V_RVALID),
    .RREADY(m_axi_out_frame_base_V_RREADY),
    .RDATA(m_axi_out_frame_base_V_RDATA),
    .RLAST(m_axi_out_frame_base_V_RLAST),
    .RID(m_axi_out_frame_base_V_RID),
    .RUSER(m_axi_out_frame_base_V_RUSER),
    .RRESP(m_axi_out_frame_base_V_RRESP),
    .BVALID(m_axi_out_frame_base_V_BVALID),
    .BREADY(m_axi_out_frame_base_V_BREADY),
    .BRESP(m_axi_out_frame_base_V_BRESP),
    .BID(m_axi_out_frame_base_V_BID),
    .BUSER(m_axi_out_frame_base_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(out_frame_base_V_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(out_frame_base_V_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(out_frame_base_V_RDATA),
    .I_RID(out_frame_base_V_RID),
    .I_RUSER(out_frame_base_V_RUSER),
    .I_RRESP(out_frame_base_V_RRESP),
    .I_RLAST(out_frame_base_V_RLAST),
    .I_AWVALID(out_frame_base_V_AWVALID),
    .I_AWREADY(out_frame_base_V_AWREADY),
    .I_AWADDR(out_frame_base_V_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(out_frame_base_V_WVALID),
    .I_WREADY(out_frame_base_V_WREADY),
    .I_WDATA(out_frame_base_V_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(8'd255),
    .I_BVALID(out_frame_base_V_BVALID),
    .I_BREADY(out_frame_base_V_BREADY),
    .I_BRESP(out_frame_base_V_BRESP),
    .I_BID(out_frame_base_V_BID),
    .I_BUSER(out_frame_base_V_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_in_frame_base_V_ARREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_reg_ioackin_in_frame_base_V_ARREADY <= 1'b0;
        end else if ((((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001)) | ((in_frame_base_V_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
            ap_reg_ioackin_in_frame_base_V_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_out_frame_base_V_AWREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_reg_ioackin_out_frame_base_V_AWREADY <= 1'b0;
        end else if ((((out_frame_base_V_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001)) | ((out_frame_base_V_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
            ap_reg_ioackin_out_frame_base_V_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_out_frame_base_V_WREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_reg_ioackin_out_frame_base_V_WREADY <= 1'b0;
        end else if ((((out_frame_base_V_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001)) | ((out_frame_base_V_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
            ap_reg_ioackin_out_frame_base_V_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_848)) begin
            ap_phi_reg_pp0_iter0_in_col_2_reg_1146 <= in_col_1_fu_1588_p2;
        end else if ((1'b1 == ap_condition_1080)) begin
            ap_phi_reg_pp0_iter0_in_col_2_reg_1146 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_848)) begin
            ap_phi_reg_pp0_iter0_in_row_4_reg_1134 <= ap_phi_reg_pp0_iter0_out_row_2_reg_1109;
        end else if ((1'b1 == ap_condition_1080)) begin
            ap_phi_reg_pp0_iter0_in_row_4_reg_1134 <= in_row_3_fu_2116_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_729)) begin
            ap_phi_reg_pp0_iter0_out_col_2_reg_1121 <= in_col_fu_1259_p2;
        end else if ((1'b1 == ap_condition_822)) begin
            ap_phi_reg_pp0_iter0_out_col_2_reg_1121 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_729)) begin
            ap_phi_reg_pp0_iter0_out_row_2_reg_1109 <= ap_phi_mux_out_row_1_phi_fu_1068_p4;
        end else if ((1'b1 == ap_condition_822)) begin
            ap_phi_reg_pp0_iter0_out_row_2_reg_1109 <= in_row_1_fu_1497_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_col_1_reg_1087 <= in_col_2_reg_1146;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        out_col_1_reg_1087 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_col_reg_1098 <= out_col_2_reg_1121;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        out_col_reg_1098 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_row_1_reg_1064 <= in_row_4_reg_1134;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        out_row_1_reg_1064 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_row_reg_1076 <= out_row_2_reg_1109;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        out_row_reg_1076 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        in_col_2_reg_1146 <= ap_phi_reg_pp0_iter0_in_col_2_reg_1146;
        in_row_4_reg_1134 <= ap_phi_reg_pp0_iter0_in_row_4_reg_1134;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        in_frame_base_V_addr_10_reg_2431 <= tmp_53_fu_1726_p1;
        in_frame_base_V_addr_11_reg_2437 <= tmp_55_fu_1746_p1;
        in_frame_base_V_addr_8_reg_2419 <= tmp_49_fu_1686_p1;
        in_frame_base_V_addr_9_reg_2425 <= tmp_51_fu_1706_p1;
        tmp_32_reg_2414 <= tmp_32_fu_1671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_frame_base_V_addr_1_reg_2247 <= tmp_7_fu_1275_p1;
        tmp_18_reg_2259 <= tmp_18_fu_1300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_frame_base_V_addr_2_reg_2264 <= tmp_s_fu_1315_p1;
        tmp_20_reg_2276 <= tmp_20_fu_1345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_frame_base_V_addr_3_reg_2281 <= tmp_8_fu_1360_p1;
        tmp_22_reg_2293 <= tmp_22_fu_1390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        in_frame_base_V_addr_4_reg_2298 <= tmp_11_fu_1405_p1;
        tmp_24_reg_2310 <= tmp_24_fu_1435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        in_frame_base_V_addr_5_reg_2315 <= tmp_13_fu_1450_p1;
        tmp_26_reg_2327 <= tmp_26_fu_1480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        in_frame_base_V_addr_6_reg_2366 <= tmp_45_fu_1572_p1;
        tmp_28_reg_2343 <= tmp_28_fu_1525_p2;
        tmp_42_reg_2348[31 : 7] <= tmp_42_fu_1542_p2[31 : 7];
        tmp_43_reg_2357 <= tmp_43_fu_1554_p2;
        tmp_80_reg_2372 <= tmp_80_fu_1582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        in_frame_base_V_addr_7_reg_2402 <= tmp_47_fu_1641_p1;
        tmp_30_reg_2397 <= tmp_30_fu_1626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_frame_base_V_addr_reg_2197 <= tmp_4_fu_1201_p1;
        tmp_14_reg_2203[31 : 7] <= tmp_14_fu_1223_p2[31 : 7];
        tmp_15_reg_2218 <= tmp_15_fu_1235_p2;
        tmp_16_reg_2233 <= tmp_16_fu_1247_p2;
        tmp_1_reg_2176 <= tmp_1_fu_1183_p2;
        tmp_40_reg_2238 <= tmp_40_fu_1253_p2;
        tmp_reg_2155[31 : 7] <= tmp_fu_1171_p2[31 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (tmp_80_fu_1582_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        in_row_2_reg_2386 <= in_row_2_fu_1600_p2;
        tmp_81_reg_2381 <= tmp_81_fu_1594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        out_col_2_reg_1121 <= ap_phi_reg_pp0_iter0_out_col_2_reg_1121;
        out_row_2_reg_1109 <= ap_phi_reg_pp0_iter0_out_row_2_reg_1109;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        out_frame1_tile0_4_s_reg_2607 <= out_frame1_tile0_4_V;
        out_frame1_tile0_5_s_reg_2618 <= out_frame1_tile0_5_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_34_reg_2449 <= tmp_34_fu_1776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp_36_reg_2460 <= tmp_36_fu_1801_p2;
        tmp_38_reg_2465 <= tmp_38_fu_1811_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp_56_reg_2482 <= tmp_56_fu_1851_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp_58_reg_2493 <= tmp_58_fu_1876_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_60_reg_2504 <= tmp_60_fu_1901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp_62_reg_2515 <= tmp_62_fu_1926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        tmp_64_reg_2526 <= tmp_64_fu_1951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        tmp_66_reg_2537 <= tmp_66_fu_1976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        tmp_68_reg_2548 <= tmp_68_fu_2001_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        tmp_70_reg_2559 <= tmp_70_fu_2026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        tmp_72_reg_2570 <= tmp_72_fu_2051_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        tmp_74_reg_2581 <= tmp_74_fu_2076_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        tmp_76_reg_2592 <= tmp_76_fu_2101_p2;
        tmp_78_reg_2597 <= tmp_78_fu_2111_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_out_col_1_phi_fu_1091_p4 = in_col_2_reg_1146;
    end else begin
        ap_phi_mux_out_col_1_phi_fu_1091_p4 = out_col_1_reg_1087;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_out_col_phi_fu_1102_p4 = out_col_2_reg_1121;
    end else begin
        ap_phi_mux_out_col_phi_fu_1102_p4 = out_col_reg_1098;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_out_row_1_phi_fu_1068_p4 = in_row_4_reg_1134;
    end else begin
        ap_phi_mux_out_row_1_phi_fu_1068_p4 = out_row_1_reg_1064;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_out_row_phi_fu_1080_p4 = out_row_2_reg_1109;
    end else begin
        ap_phi_mux_out_row_phi_fu_1080_p4 = out_row_reg_1076;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0)) begin
        ap_sig_ioackin_in_frame_base_V_ARREADY = in_frame_base_V_ARREADY;
    end else begin
        ap_sig_ioackin_in_frame_base_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0)) begin
        ap_sig_ioackin_out_frame_base_V_AWREADY = out_frame_base_V_AWREADY;
    end else begin
        ap_sig_ioackin_out_frame_base_V_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0)) begin
        ap_sig_ioackin_out_frame_base_V_WREADY = out_frame_base_V_WREADY;
    end else begin
        ap_sig_ioackin_out_frame_base_V_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_11_reg_2437;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_10_reg_2431;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_9_reg_2425;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_8_reg_2419;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_7_reg_2402;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_6_reg_2366;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_5_reg_2315;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_4_reg_2298;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_3_reg_2281;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_2_reg_2264;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_1_reg_2247;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
            in_frame_base_V_ARADDR = in_frame_base_V_addr_reg_2197;
        end else begin
            in_frame_base_V_ARADDR = 'bx;
        end
    end else begin
        in_frame_base_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001)) | ((ap_reg_ioackin_in_frame_base_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
        in_frame_base_V_ARVALID = 1'b1;
    end else begin
        in_frame_base_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        in_frame_base_V_RREADY = 1'b1;
    end else begin
        in_frame_base_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        in_frame_base_V_blk_n_AR = m_axi_in_frame_base_V_ARREADY;
    end else begin
        in_frame_base_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        in_frame_base_V_blk_n_R = m_axi_in_frame_base_V_RVALID;
    end else begin
        in_frame_base_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1636)) begin
            out_frame_base_V_AWADDR = tmp_79_fu_2141_p1;
        end else if ((1'b1 == ap_condition_1619)) begin
            out_frame_base_V_AWADDR = tmp_77_fu_2127_p1;
        end else if ((1'b1 == ap_condition_1602)) begin
            out_frame_base_V_AWADDR = tmp_75_fu_2086_p1;
        end else if ((1'b1 == ap_condition_1585)) begin
            out_frame_base_V_AWADDR = tmp_73_fu_2061_p1;
        end else if ((1'b1 == ap_condition_1568)) begin
            out_frame_base_V_AWADDR = tmp_71_fu_2036_p1;
        end else if ((1'b1 == ap_condition_1551)) begin
            out_frame_base_V_AWADDR = tmp_69_fu_2011_p1;
        end else if ((1'b1 == ap_condition_1533)) begin
            out_frame_base_V_AWADDR = tmp_67_fu_1986_p1;
        end else if ((1'b1 == ap_condition_1515)) begin
            out_frame_base_V_AWADDR = tmp_65_fu_1961_p1;
        end else if ((1'b1 == ap_condition_1497)) begin
            out_frame_base_V_AWADDR = tmp_63_fu_1936_p1;
        end else if ((1'b1 == ap_condition_1478)) begin
            out_frame_base_V_AWADDR = tmp_61_fu_1911_p1;
        end else if ((1'b1 == ap_condition_1459)) begin
            out_frame_base_V_AWADDR = tmp_59_fu_1886_p1;
        end else if ((1'b1 == ap_condition_1440)) begin
            out_frame_base_V_AWADDR = tmp_57_fu_1861_p1;
        end else if ((1'b1 == ap_condition_1417)) begin
            out_frame_base_V_AWADDR = tmp_39_fu_1836_p1;
        end else if ((1'b1 == ap_condition_1394)) begin
            out_frame_base_V_AWADDR = tmp_37_fu_1821_p1;
        end else if ((1'b1 == ap_condition_1371)) begin
            out_frame_base_V_AWADDR = tmp_35_fu_1786_p1;
        end else if ((1'b1 == ap_condition_1348)) begin
            out_frame_base_V_AWADDR = tmp_33_fu_1761_p1;
        end else if ((1'b1 == ap_condition_1325)) begin
            out_frame_base_V_AWADDR = tmp_31_fu_1656_p1;
        end else if ((1'b1 == ap_condition_1302)) begin
            out_frame_base_V_AWADDR = tmp_29_fu_1611_p1;
        end else if ((1'b1 == ap_condition_1280)) begin
            out_frame_base_V_AWADDR = tmp_27_fu_1510_p1;
        end else if ((1'b1 == ap_condition_1259)) begin
            out_frame_base_V_AWADDR = tmp_25_fu_1465_p1;
        end else if ((1'b1 == ap_condition_1237)) begin
            out_frame_base_V_AWADDR = tmp_23_fu_1420_p1;
        end else if ((1'b1 == ap_condition_1215)) begin
            out_frame_base_V_AWADDR = tmp_21_fu_1375_p1;
        end else if ((1'b1 == ap_condition_1191)) begin
            out_frame_base_V_AWADDR = tmp_19_fu_1330_p1;
        end else if ((1'b1 == ap_condition_1172)) begin
            out_frame_base_V_AWADDR = tmp_17_fu_1285_p1;
        end else begin
            out_frame_base_V_AWADDR = 'bx;
        end
    end else begin
        out_frame_base_V_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001)) | ((ap_reg_ioackin_out_frame_base_V_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
        out_frame_base_V_AWVALID = 1'b1;
    end else begin
        out_frame_base_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        out_frame_base_V_BREADY = 1'b1;
    end else begin
        out_frame_base_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1650)) begin
            out_frame_base_V_WDATA = p_23_fu_2151_p1;
        end else if ((1'b1 == ap_condition_1636)) begin
            out_frame_base_V_WDATA = p_22_fu_2137_p1;
        end else if ((1'b1 == ap_condition_1619)) begin
            out_frame_base_V_WDATA = p_21_fu_2122_p1;
        end else if ((1'b1 == ap_condition_1602)) begin
            out_frame_base_V_WDATA = p_20_fu_2081_p1;
        end else if ((1'b1 == ap_condition_1585)) begin
            out_frame_base_V_WDATA = p_19_fu_2056_p1;
        end else if ((1'b1 == ap_condition_1568)) begin
            out_frame_base_V_WDATA = p_18_fu_2031_p1;
        end else if ((1'b1 == ap_condition_1551)) begin
            out_frame_base_V_WDATA = p_17_fu_2006_p1;
        end else if ((1'b1 == ap_condition_1533)) begin
            out_frame_base_V_WDATA = p_16_fu_1981_p1;
        end else if ((1'b1 == ap_condition_1515)) begin
            out_frame_base_V_WDATA = p_15_fu_1956_p1;
        end else if ((1'b1 == ap_condition_1497)) begin
            out_frame_base_V_WDATA = p_14_fu_1931_p1;
        end else if ((1'b1 == ap_condition_1478)) begin
            out_frame_base_V_WDATA = p_13_fu_1906_p1;
        end else if ((1'b1 == ap_condition_1459)) begin
            out_frame_base_V_WDATA = p_12_fu_1881_p1;
        end else if ((1'b1 == ap_condition_1440)) begin
            out_frame_base_V_WDATA = p_11_fu_1856_p1;
        end else if ((1'b1 == ap_condition_1417)) begin
            out_frame_base_V_WDATA = p_10_fu_1831_p1;
        end else if ((1'b1 == ap_condition_1394)) begin
            out_frame_base_V_WDATA = p_9_fu_1816_p1;
        end else if ((1'b1 == ap_condition_1371)) begin
            out_frame_base_V_WDATA = p_8_fu_1781_p1;
        end else if ((1'b1 == ap_condition_1348)) begin
            out_frame_base_V_WDATA = p_7_fu_1756_p1;
        end else if ((1'b1 == ap_condition_1325)) begin
            out_frame_base_V_WDATA = p_6_fu_1651_p1;
        end else if ((1'b1 == ap_condition_1302)) begin
            out_frame_base_V_WDATA = p_5_fu_1606_p1;
        end else if ((1'b1 == ap_condition_1280)) begin
            out_frame_base_V_WDATA = p_4_fu_1505_p1;
        end else if ((1'b1 == ap_condition_1259)) begin
            out_frame_base_V_WDATA = p_3_fu_1460_p1;
        end else if ((1'b1 == ap_condition_1237)) begin
            out_frame_base_V_WDATA = p_2_fu_1415_p1;
        end else if ((1'b1 == ap_condition_1215)) begin
            out_frame_base_V_WDATA = p_1_fu_1370_p1;
        end else if ((1'b1 == ap_condition_1191)) begin
            out_frame_base_V_WDATA = p_s_fu_1325_p1;
        end else begin
            out_frame_base_V_WDATA = 'bx;
        end
    end else begin
        out_frame_base_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001)) | ((ap_reg_ioackin_out_frame_base_V_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
        out_frame_base_V_WVALID = 1'b1;
    end else begin
        out_frame_base_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        out_frame_base_V_blk_n_AW = m_axi_out_frame_base_V_AWREADY;
    end else begin
        out_frame_base_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        out_frame_base_V_blk_n_B = m_axi_out_frame_base_V_BVALID;
    end else begin
        out_frame_base_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        out_frame_base_V_blk_n_W = m_axi_out_frame_base_V_WREADY;
    end else begin
        out_frame_base_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state26_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state26_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state12_io)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state12_io)));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state13_io)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state13_io)));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state14_io)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state14_io)));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state15_io)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state15_io)));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state16_io)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state16_io)));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state17_io)));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state17_io)));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state18_io)));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state18_io)));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state19_io)));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state19_io)));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state20_io)));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state20_io)));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state21_io)));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state21_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0) | (out_frame_base_V_BVALID == 1'b0))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0) | (out_frame_base_V_BVALID == 1'b0))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state22_io)));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state22_io)));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state23_io)));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state23_io)));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state24_io)));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state24_io)));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state25_io)));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state25_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((out_frame_base_V_BVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state9_io)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (1'b1 == ap_block_state9_io)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state10_io)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state10_io)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state11_io)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0) | (1'b1 == ap_block_state11_io)));
end

always @ (*) begin
    ap_block_state10_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage16_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state20_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage18_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage19_iter0 = ((out_frame_base_V_BVALID == 1'b0) | (in_frame_base_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage20_iter0 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage21_iter0 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage22_iter0 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state25_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage23_iter0 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state26_io = ((ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage0_iter1 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state27_pp0_stage1_iter1 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state28_pp0_stage2_iter1 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state29_pp0_stage3_iter1 = (out_frame_base_V_BVALID == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage4_iter1 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state31_pp0_stage5_iter1 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state32_pp0_stage6_iter1 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state3_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((ap_sig_ioackin_in_frame_base_V_ARREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_AWREADY == 1'b0) | (ap_sig_ioackin_out_frame_base_V_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = (out_frame_base_V_BVALID == 1'b0);
end

always @ (*) begin
    ap_condition_1080 = ((tmp_80_reg_2372 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001));
end

always @ (*) begin
    ap_condition_1172 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001));
end

always @ (*) begin
    ap_condition_1191 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001));
end

always @ (*) begin
    ap_condition_1215 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001));
end

always @ (*) begin
    ap_condition_1237 = ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001));
end

always @ (*) begin
    ap_condition_1259 = ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001));
end

always @ (*) begin
    ap_condition_1280 = ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001));
end

always @ (*) begin
    ap_condition_1302 = ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001));
end

always @ (*) begin
    ap_condition_1325 = ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001));
end

always @ (*) begin
    ap_condition_1348 = ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001));
end

always @ (*) begin
    ap_condition_1371 = ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001));
end

always @ (*) begin
    ap_condition_1394 = ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001));
end

always @ (*) begin
    ap_condition_1417 = ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001));
end

always @ (*) begin
    ap_condition_1440 = ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_01001));
end

always @ (*) begin
    ap_condition_1459 = ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14_01001));
end

always @ (*) begin
    ap_condition_1478 = ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001));
end

always @ (*) begin
    ap_condition_1497 = ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16_01001));
end

always @ (*) begin
    ap_condition_1515 = ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17_01001));
end

always @ (*) begin
    ap_condition_1533 = ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18_01001));
end

always @ (*) begin
    ap_condition_1551 = ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_01001));
end

always @ (*) begin
    ap_condition_1568 = ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20_01001));
end

always @ (*) begin
    ap_condition_1585 = ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21_01001));
end

always @ (*) begin
    ap_condition_1602 = ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22_01001));
end

always @ (*) begin
    ap_condition_1619 = ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23_01001));
end

always @ (*) begin
    ap_condition_1636 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_1650 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001));
end

always @ (*) begin
    ap_condition_729 = ((tmp_40_fu_1253_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_822 = ((1'b0 == ap_block_pp0_stage5_11001) & (tmp_40_reg_2238 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_848 = ((1'b0 == ap_block_pp0_stage6_11001) & (tmp_80_fu_1582_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign in_col_1_fu_1588_p2 = (ap_phi_reg_pp0_iter0_out_col_2_reg_1121 + 32'd1);

assign in_col_fu_1259_p2 = (ap_phi_mux_out_col_1_phi_fu_1091_p4 + 32'd1);

assign in_frame0_tile0_0_V = in_frame_base_V_RDATA;

assign in_frame0_tile0_1_V = in_frame_base_V_RDATA;

assign in_frame0_tile0_2_V = in_frame_base_V_RDATA;

assign in_frame0_tile0_3_V = in_frame_base_V_RDATA;

assign in_frame0_tile0_4_V = in_frame_base_V_RDATA;

assign in_frame0_tile0_5_V = in_frame_base_V_RDATA;

assign in_frame0_tile1_0_V = in_frame_base_V_RDATA;

assign in_frame0_tile1_1_V = in_frame_base_V_RDATA;

assign in_frame0_tile1_2_V = in_frame_base_V_RDATA;

assign in_frame0_tile1_3_V = in_frame_base_V_RDATA;

assign in_frame0_tile1_4_V = in_frame_base_V_RDATA;

assign in_frame0_tile1_5_V = in_frame_base_V_RDATA;

assign in_frame1_tile0_0_V = in_frame_base_V_RDATA;

assign in_frame1_tile0_1_V = in_frame_base_V_RDATA;

assign in_frame1_tile0_2_V = in_frame_base_V_RDATA;

assign in_frame1_tile0_3_V = in_frame_base_V_RDATA;

assign in_frame1_tile0_4_V = in_frame_base_V_RDATA;

assign in_frame1_tile0_5_V = in_frame_base_V_RDATA;

assign in_frame1_tile1_0_V = in_frame_base_V_RDATA;

assign in_frame1_tile1_1_V = in_frame_base_V_RDATA;

assign in_frame1_tile1_2_V = in_frame_base_V_RDATA;

assign in_frame1_tile1_3_V = in_frame_base_V_RDATA;

assign in_frame1_tile1_4_V = in_frame_base_V_RDATA;

assign in_frame1_tile1_5_V = in_frame_base_V_RDATA;

assign in_row_1_fu_1497_p3 = ((tmp_41_fu_1485_p2[0:0] === 1'b1) ? 32'd0 : in_row_fu_1491_p2);

assign in_row_2_fu_1600_p2 = (ap_phi_reg_pp0_iter0_out_row_2_reg_1109 + 32'd2);

assign in_row_3_fu_2116_p3 = ((tmp_81_reg_2381[0:0] === 1'b1) ? 32'd0 : in_row_2_reg_2386);

assign in_row_fu_1491_p2 = (out_row_1_reg_1064 + 32'd2);

assign p_10_fu_1831_p1 = out_frame1_tile1_4_V;

assign p_11_fu_1856_p1 = out_frame1_tile1_5_V;

assign p_12_fu_1881_p1 = out_frame0_tile0_0_V;

assign p_13_fu_1906_p1 = out_frame0_tile0_1_V;

assign p_14_fu_1931_p1 = out_frame0_tile0_2_V;

assign p_15_fu_1956_p1 = out_frame0_tile0_3_V;

assign p_16_fu_1981_p1 = out_frame0_tile0_4_V;

assign p_17_fu_2006_p1 = out_frame0_tile0_5_V;

assign p_18_fu_2031_p1 = out_frame1_tile0_0_V;

assign p_19_fu_2056_p1 = out_frame1_tile0_1_V;

assign p_1_fu_1370_p1 = out_frame0_tile1_1_V;

assign p_20_fu_2081_p1 = out_frame1_tile0_2_V;

assign p_21_fu_2122_p1 = out_frame1_tile0_3_V;

assign p_22_fu_2137_p1 = out_frame1_tile0_4_s_reg_2607;

assign p_23_fu_2151_p1 = out_frame1_tile0_5_s_reg_2618;

assign p_2_fu_1415_p1 = out_frame0_tile1_2_V;

assign p_3_fu_1460_p1 = out_frame0_tile1_3_V;

assign p_4_fu_1505_p1 = out_frame0_tile1_4_V;

assign p_5_fu_1606_p1 = out_frame0_tile1_5_V;

assign p_6_fu_1651_p1 = out_frame1_tile1_0_V;

assign p_7_fu_1756_p1 = out_frame1_tile1_1_V;

assign p_8_fu_1781_p1 = out_frame1_tile1_2_V;

assign p_9_fu_1816_p1 = out_frame1_tile1_3_V;

assign p_s_fu_1325_p1 = out_frame0_tile1_0_V;

assign tmp10_fu_1385_p2 = (32'd1098909568 + tmp_15_reg_2218);

assign tmp11_fu_1430_p2 = (32'd1098909569 + tmp_15_reg_2218);

assign tmp12_fu_1475_p2 = (32'd1098909570 + tmp_15_reg_2218);

assign tmp13_fu_1520_p2 = (32'd1107296256 + tmp_15_reg_2218);

assign tmp14_fu_1621_p2 = (32'd1107296257 + tmp_15_reg_2218);

assign tmp15_fu_1666_p2 = (32'd1107296258 + tmp_15_reg_2218);

assign tmp16_fu_1771_p2 = (32'd1107298176 + tmp_15_reg_2218);

assign tmp17_fu_1796_p2 = (32'd1107298177 + tmp_15_reg_2218);

assign tmp18_fu_1806_p2 = (32'd1107298178 + tmp_15_reg_2218);

assign tmp19_fu_1560_p2 = (32'd1082130432 + tmp_43_fu_1554_p2);

assign tmp1_fu_1189_p2 = (32'd1082130432 + tmp_1_fu_1183_p2);

assign tmp20_fu_1631_p2 = (32'd1082130433 + tmp_43_reg_2357);

assign tmp21_fu_1676_p2 = (32'd1082130434 + tmp_43_reg_2357);

assign tmp22_fu_1696_p2 = (32'd1082132352 + tmp_43_reg_2357);

assign tmp23_fu_1716_p2 = (32'd1082132353 + tmp_43_reg_2357);

assign tmp24_fu_1736_p2 = (32'd1082132354 + tmp_43_reg_2357);

assign tmp25_fu_1846_p2 = (32'd1098907648 + tmp_1_reg_2176);

assign tmp26_fu_1871_p2 = (32'd1098907649 + tmp_1_reg_2176);

assign tmp27_fu_1896_p2 = (32'd1098907650 + tmp_1_reg_2176);

assign tmp28_fu_1921_p2 = (32'd1098909568 + tmp_1_reg_2176);

assign tmp29_fu_1946_p2 = (32'd1098909569 + tmp_1_reg_2176);

assign tmp2_fu_1265_p2 = (32'd1082130433 + tmp_1_reg_2176);

assign tmp30_fu_1971_p2 = (32'd1098909570 + tmp_1_reg_2176);

assign tmp31_fu_1996_p2 = (32'd1107296256 + tmp_1_reg_2176);

assign tmp32_fu_2021_p2 = (32'd1107296257 + tmp_1_reg_2176);

assign tmp33_fu_2046_p2 = (32'd1107296258 + tmp_1_reg_2176);

assign tmp34_fu_2071_p2 = (32'd1107298176 + tmp_1_reg_2176);

assign tmp35_fu_2096_p2 = (32'd1107298177 + tmp_1_reg_2176);

assign tmp36_fu_2106_p2 = (32'd1107298178 + tmp_1_reg_2176);

assign tmp3_fu_1305_p2 = (32'd1082130434 + tmp_1_reg_2176);

assign tmp4_fu_1350_p2 = (32'd1082132352 + tmp_1_reg_2176);

assign tmp5_fu_1395_p2 = (32'd1082132353 + tmp_1_reg_2176);

assign tmp6_fu_1440_p2 = (32'd1082132354 + tmp_1_reg_2176);

assign tmp7_fu_1241_p2 = (32'd1098907648 + tmp_15_fu_1235_p2);

assign tmp8_fu_1295_p2 = (32'd1098907649 + tmp_15_reg_2218);

assign tmp9_fu_1340_p2 = (32'd1098907650 + tmp_15_reg_2218);

assign tmp_10_fu_1400_p2 = (tmp5_fu_1395_p2 + tmp_reg_2155);

assign tmp_11_fu_1405_p1 = tmp_10_fu_1400_p2;

assign tmp_12_fu_1445_p2 = (tmp6_fu_1440_p2 + tmp_reg_2155);

assign tmp_13_fu_1450_p1 = tmp_12_fu_1445_p2;

assign tmp_14_fu_1223_p2 = (tmp_85_fu_1211_p2 - tmp_86_fu_1217_p2);

assign tmp_15_fu_1235_p2 = (tmp_87_fu_1229_p2 - ap_phi_mux_out_col_phi_fu_1102_p4);

assign tmp_16_fu_1247_p2 = (tmp7_fu_1241_p2 + tmp_14_fu_1223_p2);

assign tmp_17_fu_1285_p1 = tmp_16_reg_2233;

assign tmp_18_fu_1300_p2 = (tmp8_fu_1295_p2 + tmp_14_reg_2203);

assign tmp_19_fu_1330_p1 = tmp_18_reg_2259;

assign tmp_1_fu_1183_p2 = (tmp_84_fu_1177_p2 - ap_phi_mux_out_col_1_phi_fu_1091_p4);

assign tmp_20_fu_1345_p2 = (tmp9_fu_1340_p2 + tmp_14_reg_2203);

assign tmp_21_fu_1375_p1 = tmp_20_reg_2276;

assign tmp_22_fu_1390_p2 = (tmp10_fu_1385_p2 + tmp_14_reg_2203);

assign tmp_23_fu_1420_p1 = tmp_22_reg_2293;

assign tmp_24_fu_1435_p2 = (tmp11_fu_1430_p2 + tmp_14_reg_2203);

assign tmp_25_fu_1465_p1 = tmp_24_reg_2310;

assign tmp_26_fu_1480_p2 = (tmp12_fu_1475_p2 + tmp_14_reg_2203);

assign tmp_27_fu_1510_p1 = tmp_26_reg_2327;

assign tmp_28_fu_1525_p2 = (tmp13_fu_1520_p2 + tmp_14_reg_2203);

assign tmp_29_fu_1611_p1 = tmp_28_reg_2343;

assign tmp_30_fu_1626_p2 = (tmp14_fu_1621_p2 + tmp_14_reg_2203);

assign tmp_31_fu_1656_p1 = tmp_30_reg_2397;

assign tmp_32_fu_1671_p2 = (tmp15_fu_1666_p2 + tmp_14_reg_2203);

assign tmp_33_fu_1761_p1 = tmp_32_reg_2414;

assign tmp_34_fu_1776_p2 = (tmp16_fu_1771_p2 + tmp_14_reg_2203);

assign tmp_35_fu_1786_p1 = tmp_34_reg_2449;

assign tmp_36_fu_1801_p2 = (tmp17_fu_1796_p2 + tmp_14_reg_2203);

assign tmp_37_fu_1821_p1 = tmp_36_reg_2460;

assign tmp_38_fu_1811_p2 = (tmp18_fu_1806_p2 + tmp_14_reg_2203);

assign tmp_39_fu_1836_p1 = tmp_38_reg_2465;

assign tmp_3_fu_1195_p2 = (tmp1_fu_1189_p2 + tmp_fu_1171_p2);

assign tmp_40_fu_1253_p2 = ((ap_phi_mux_out_col_1_phi_fu_1091_p4 == 32'd639) ? 1'b1 : 1'b0);

assign tmp_41_fu_1485_p2 = ((out_row_1_reg_1064 == 32'd718) ? 1'b1 : 1'b0);

assign tmp_42_fu_1542_p2 = (tmp_88_fu_1530_p2 - tmp_89_fu_1536_p2);

assign tmp_43_fu_1554_p2 = (tmp_90_fu_1548_p2 - ap_phi_reg_pp0_iter0_out_col_2_reg_1121);

assign tmp_44_fu_1566_p2 = (tmp19_fu_1560_p2 + tmp_42_fu_1542_p2);

assign tmp_45_fu_1572_p1 = tmp_44_fu_1566_p2;

assign tmp_46_fu_1636_p2 = (tmp20_fu_1631_p2 + tmp_42_reg_2348);

assign tmp_47_fu_1641_p1 = tmp_46_fu_1636_p2;

assign tmp_48_fu_1681_p2 = (tmp21_fu_1676_p2 + tmp_42_reg_2348);

assign tmp_49_fu_1686_p1 = tmp_48_fu_1681_p2;

assign tmp_4_fu_1201_p1 = tmp_3_fu_1195_p2;

assign tmp_50_fu_1701_p2 = (tmp22_fu_1696_p2 + tmp_42_reg_2348);

assign tmp_51_fu_1706_p1 = tmp_50_fu_1701_p2;

assign tmp_52_fu_1721_p2 = (tmp23_fu_1716_p2 + tmp_42_reg_2348);

assign tmp_53_fu_1726_p1 = tmp_52_fu_1721_p2;

assign tmp_54_fu_1741_p2 = (tmp24_fu_1736_p2 + tmp_42_reg_2348);

assign tmp_55_fu_1746_p1 = tmp_54_fu_1741_p2;

assign tmp_56_fu_1851_p2 = (tmp25_fu_1846_p2 + tmp_reg_2155);

assign tmp_57_fu_1861_p1 = tmp_56_reg_2482;

assign tmp_58_fu_1876_p2 = (tmp26_fu_1871_p2 + tmp_reg_2155);

assign tmp_59_fu_1886_p1 = tmp_58_reg_2493;

assign tmp_5_fu_1355_p2 = (tmp4_fu_1350_p2 + tmp_reg_2155);

assign tmp_60_fu_1901_p2 = (tmp27_fu_1896_p2 + tmp_reg_2155);

assign tmp_61_fu_1911_p1 = tmp_60_reg_2504;

assign tmp_62_fu_1926_p2 = (tmp28_fu_1921_p2 + tmp_reg_2155);

assign tmp_63_fu_1936_p1 = tmp_62_reg_2515;

assign tmp_64_fu_1951_p2 = (tmp29_fu_1946_p2 + tmp_reg_2155);

assign tmp_65_fu_1961_p1 = tmp_64_reg_2526;

assign tmp_66_fu_1976_p2 = (tmp30_fu_1971_p2 + tmp_reg_2155);

assign tmp_67_fu_1986_p1 = tmp_66_reg_2537;

assign tmp_68_fu_2001_p2 = (tmp31_fu_1996_p2 + tmp_reg_2155);

assign tmp_69_fu_2011_p1 = tmp_68_reg_2548;

assign tmp_6_fu_1270_p2 = (tmp2_fu_1265_p2 + tmp_reg_2155);

assign tmp_70_fu_2026_p2 = (tmp32_fu_2021_p2 + tmp_reg_2155);

assign tmp_71_fu_2036_p1 = tmp_70_reg_2559;

assign tmp_72_fu_2051_p2 = (tmp33_fu_2046_p2 + tmp_reg_2155);

assign tmp_73_fu_2061_p1 = tmp_72_reg_2570;

assign tmp_74_fu_2076_p2 = (tmp34_fu_2071_p2 + tmp_reg_2155);

assign tmp_75_fu_2086_p1 = tmp_74_reg_2581;

assign tmp_76_fu_2101_p2 = (tmp35_fu_2096_p2 + tmp_reg_2155);

assign tmp_77_fu_2127_p1 = tmp_76_reg_2592;

assign tmp_78_fu_2111_p2 = (tmp36_fu_2106_p2 + tmp_reg_2155);

assign tmp_79_fu_2141_p1 = tmp_78_reg_2597;

assign tmp_7_fu_1275_p1 = tmp_6_fu_1270_p2;

assign tmp_80_fu_1582_p2 = ((ap_phi_reg_pp0_iter0_out_col_2_reg_1121 == 32'd639) ? 1'b1 : 1'b0);

assign tmp_81_fu_1594_p2 = ((ap_phi_reg_pp0_iter0_out_row_2_reg_1109 == 32'd718) ? 1'b1 : 1'b0);

assign tmp_82_fu_1159_p2 = ap_phi_mux_out_row_1_phi_fu_1068_p4 << 32'd11;

assign tmp_83_fu_1165_p2 = ap_phi_mux_out_row_1_phi_fu_1068_p4 << 32'd7;

assign tmp_84_fu_1177_p2 = ap_phi_mux_out_col_1_phi_fu_1091_p4 << 32'd2;

assign tmp_85_fu_1211_p2 = ap_phi_mux_out_row_phi_fu_1080_p4 << 32'd11;

assign tmp_86_fu_1217_p2 = ap_phi_mux_out_row_phi_fu_1080_p4 << 32'd7;

assign tmp_87_fu_1229_p2 = ap_phi_mux_out_col_phi_fu_1102_p4 << 32'd2;

assign tmp_88_fu_1530_p2 = ap_phi_reg_pp0_iter0_out_row_2_reg_1109 << 32'd11;

assign tmp_89_fu_1536_p2 = ap_phi_reg_pp0_iter0_out_row_2_reg_1109 << 32'd7;

assign tmp_8_fu_1360_p1 = tmp_5_fu_1355_p2;

assign tmp_90_fu_1548_p2 = ap_phi_reg_pp0_iter0_out_col_2_reg_1121 << 32'd2;

assign tmp_9_fu_1310_p2 = (tmp3_fu_1305_p2 + tmp_reg_2155);

assign tmp_fu_1171_p2 = (tmp_82_fu_1159_p2 - tmp_83_fu_1165_p2);

assign tmp_s_fu_1315_p1 = tmp_9_fu_1310_p2;

always @ (posedge ap_clk) begin
    tmp_reg_2155[6:0] <= 7'b0000000;
    tmp_14_reg_2203[6:0] <= 7'b0000000;
    tmp_42_reg_2348[6:0] <= 7'b0000000;
end

endmodule //dma_mm2reg
